Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print_instr
Rule 5     instruccion -> declaracion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> declaracion_asignacion_instr
Rule 8     instruccion -> llamadaFuncion_instr
Rule 9     instruccion -> funcion_instr
Rule 10    instruccion -> if_instr
Rule 11    instruccion -> while_instr
Rule 12    instruccion -> for_instr
Rule 13    instruccion -> BREAK
Rule 14    instruccion -> CONTINUE
Rule 15    instruccion -> RETURN
Rule 16    print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
Rule 17    print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA
Rule 18    declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA
Rule 19    declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA
Rule 20    declaracion_instr -> LOCAL ID PUNTOYCOMA
Rule 21    declaracion_instr -> GLOBAL ID PUNTOYCOMA
Rule 22    declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA
Rule 23    declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
Rule 24    struct_variables -> struct_variables struct_variable
Rule 25    struct_variables -> struct_variable
Rule 26    struct_variable -> ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
Rule 27    struct_variable -> ID PUNTOYCOMA
Rule 28    asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA
Rule 29    declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
Rule 30    llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA
Rule 31    funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
Rule 32    parametros -> parametros COMA parametro
Rule 33    parametros -> parametro
Rule 34    parametro -> ID DOSPUNTOSDOSPUNTOS tipoDato
Rule 35    parametro -> ID
Rule 36    if_instr -> IF expresion instrucciones END PUNTOYCOMA
Rule 37    if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
Rule 38    if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
Rule 39    elseifs -> elseifs COMA elseif_instr
Rule 40    elseifs -> elseif_instr
Rule 41    elseif_instr -> ELSEIF expresion instrucciones
Rule 42    while_instr -> WHILE expresion instrucciones END PUNTOYCOMA
Rule 43    for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
Rule 44    for_instr_opciones -> ENTERO DOSPUNTOS ENTERO
Rule 45    for_instr_opciones -> expresion
Rule 46    expresiones -> expresiones COMA expresion
Rule 47    expresiones -> expresion
Rule 48    expresion -> expresion MAS expresion
Rule 49    expresion -> expresion MENOS expresion
Rule 50    expresion -> expresion POR expresion
Rule 51    expresion -> expresion DIV expresion
Rule 52    expresion -> expresion POTENCIA expresion
Rule 53    expresion -> expresion MODULO expresion
Rule 54    expresion -> expresion MAYOR expresion
Rule 55    expresion -> expresion MENOR expresion
Rule 56    expresion -> expresion MAYORIGUAL expresion
Rule 57    expresion -> expresion MENORIGUAL expresion
Rule 58    expresion -> expresion IGUALIGUAL expresion
Rule 59    expresion -> expresion DIFERENTE expresion
Rule 60    expresion -> expresion OR expresion
Rule 61    expresion -> expresion AND expresion
Rule 62    expresion -> MENOS expresion
Rule 63    expresion -> NOT expresion
Rule 64    expresion -> DECIMAL
Rule 65    expresion -> ENTERO
Rule 66    expresion -> CARACTER
Rule 67    expresion -> CADENA
Rule 68    expresion -> TRUE
Rule 69    expresion -> FALSE
Rule 70    expresion -> NULO
Rule 71    expresion -> SQRT PARIZQ expresion PARDER
Rule 72    expresion -> TAN PARIZQ expresion PARDER
Rule 73    expresion -> COS PARIZQ expresion PARDER
Rule 74    expresion -> SIN PARIZQ expresion PARDER
Rule 75    expresion -> LOG PARIZQ expresion COMA expresion PARDER
Rule 76    expresion -> LOG10 PARIZQ expresion PARDER
Rule 77    expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER
Rule 78    expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER
Rule 79    expresion -> FLOAT PARIZQ expresion PARDER
Rule 80    expresion -> STRING PARIZQ expresion PARDER
Rule 81    expresion -> TYPEOF PARIZQ expresion PARDER
Rule 82    expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER
Rule 83    expresion -> POP NOT PARIZQ expresion PARDER
Rule 84    expresion -> LENGTH PARIZQ expresion PARDER
Rule 85    expresion -> UPPERCASE PARIZQ expresion PARDER
Rule 86    expresion -> LOWERCASE PARIZQ expresion PARDER
Rule 87    expresion -> expresion PUNTO expresion
Rule 88    expresion -> ID PARIZQ expresiones PARDER
Rule 89    expresion -> ID expresion
Rule 90    expresion -> ID
Rule 91    expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER
Rule 92    expresion -> CORIZQ expresiones CORDER
Rule 93    tipoDato -> NULO
Rule 94    tipoDato -> FLOAT64
Rule 95    tipoDato -> INT64
Rule 96    tipoDato -> BOOL
Rule 97    tipoDato -> CHAR
Rule 98    tipoDato -> STRING
Rule 99    tipoDato -> ID

Terminals, with rules where they appear

AND                  : 61
BOOL                 : 96
BREAK                : 13
CADENA               : 67
CARACTER             : 66
CHAR                 : 97
COMA                 : 32 39 46 75 77 78 82
CONTINUE             : 14
CORDER               : 91 92
CORIZQ               : 91 92
COS                  : 73
DECIMAL              : 64
DIFERENTE            : 59
DIV                  : 51
DOSPUNTOS            : 44 91
DOSPUNTOSDOSPUNTOS   : 26 29 34
ELSE                 : 37 38
ELSEIF               : 41
END                  : 22 23 31 36 37 38 42 43
ENTERO               : 44 44 65
FALSE                : 69
FLOAT                : 79
FLOAT64              : 94
FOR                  : 43
FUNCTION             : 31
GLOBAL               : 19 21
ID                   : 18 19 20 21 22 23 26 27 29 30 31 34 35 43 88 89 90 99
IF                   : 36 37 38
IGUAL                : 18 19 28 29
IGUALIGUAL           : 58
IN                   : 43
INT64                : 95
LENGTH               : 84
LOCAL                : 18 20
LOG                  : 75
LOG10                : 76
LOWERCASE            : 86
MAS                  : 48
MAYOR                : 54
MAYORIGUAL           : 56
MENOR                : 55
MENORIGUAL           : 57
MENOS                : 49 62
MODULO               : 53
MUTABLE              : 23
NOT                  : 63 82 83
NULO                 : 70 93
OR                   : 60
PARDER               : 16 17 30 31 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 88
PARIZQ               : 16 17 30 31 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 88
PARSE                : 77
POP                  : 83
POR                  : 50
POTENCIA             : 52
PRINT                : 17
PRINTLN              : 16
PUNTO                : 87
PUNTOYCOMA           : 16 17 18 19 20 21 22 23 26 27 28 29 30 31 36 37 38 42 43
PUSH                 : 82
RETURN               : 15
SIN                  : 74
SQRT                 : 71
STRING               : 80 98
STRUCT               : 22 23
TAN                  : 72
TRUE                 : 68
TRUNC                : 78
TYPEOF               : 81
UPPERCASE            : 85
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
declaracion_asignacion_instr : 7
declaracion_instr    : 5
elseif_instr         : 39 40
elseifs              : 37 39
expresion            : 18 19 28 28 29 36 37 38 41 42 45 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 63 71 72 73 74 75 75 76 77 78 79 80 81 82 82 83 84 85 86 87 87 89 91 91
expresiones          : 16 17 30 46 88 92
for_instr            : 12
for_instr_opciones   : 43
funcion_instr        : 9
if_instr             : 10
inicio               : 0
instruccion          : 2 3
instrucciones        : 1 2 31 36 37 37 38 38 41 42 43
llamadaFuncion_instr : 8
parametro            : 32 33
parametros           : 31 32
print_instr          : 4
struct_variable      : 24 25
struct_variables     : 22 23 24
tipoDato             : 26 29 34 77 78
while_instr          : 11

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    $end            reduce using rule 1 (inicio -> instrucciones .)
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 3

    (3) instrucciones -> instruccion .

    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 3 (instrucciones -> instruccion .)
    MUTABLE         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    NULO            reduce using rule 3 (instrucciones -> instruccion .)
    SQRT            reduce using rule 3 (instrucciones -> instruccion .)
    TAN             reduce using rule 3 (instrucciones -> instruccion .)
    COS             reduce using rule 3 (instrucciones -> instruccion .)
    SIN             reduce using rule 3 (instrucciones -> instruccion .)
    LOG             reduce using rule 3 (instrucciones -> instruccion .)
    LOG10           reduce using rule 3 (instrucciones -> instruccion .)
    PARSE           reduce using rule 3 (instrucciones -> instruccion .)
    TRUNC           reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    TYPEOF          reduce using rule 3 (instrucciones -> instruccion .)
    PUSH            reduce using rule 3 (instrucciones -> instruccion .)
    POP             reduce using rule 3 (instrucciones -> instruccion .)
    LENGTH          reduce using rule 3 (instrucciones -> instruccion .)
    UPPERCASE       reduce using rule 3 (instrucciones -> instruccion .)
    LOWERCASE       reduce using rule 3 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instruccion .)
    COMA            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print_instr .

    BREAK           reduce using rule 4 (instruccion -> print_instr .)
    CONTINUE        reduce using rule 4 (instruccion -> print_instr .)
    RETURN          reduce using rule 4 (instruccion -> print_instr .)
    PRINTLN         reduce using rule 4 (instruccion -> print_instr .)
    PRINT           reduce using rule 4 (instruccion -> print_instr .)
    LOCAL           reduce using rule 4 (instruccion -> print_instr .)
    GLOBAL          reduce using rule 4 (instruccion -> print_instr .)
    STRUCT          reduce using rule 4 (instruccion -> print_instr .)
    MUTABLE         reduce using rule 4 (instruccion -> print_instr .)
    ID              reduce using rule 4 (instruccion -> print_instr .)
    FUNCTION        reduce using rule 4 (instruccion -> print_instr .)
    IF              reduce using rule 4 (instruccion -> print_instr .)
    WHILE           reduce using rule 4 (instruccion -> print_instr .)
    FOR             reduce using rule 4 (instruccion -> print_instr .)
    MENOS           reduce using rule 4 (instruccion -> print_instr .)
    NOT             reduce using rule 4 (instruccion -> print_instr .)
    DECIMAL         reduce using rule 4 (instruccion -> print_instr .)
    ENTERO          reduce using rule 4 (instruccion -> print_instr .)
    CARACTER        reduce using rule 4 (instruccion -> print_instr .)
    CADENA          reduce using rule 4 (instruccion -> print_instr .)
    TRUE            reduce using rule 4 (instruccion -> print_instr .)
    FALSE           reduce using rule 4 (instruccion -> print_instr .)
    NULO            reduce using rule 4 (instruccion -> print_instr .)
    SQRT            reduce using rule 4 (instruccion -> print_instr .)
    TAN             reduce using rule 4 (instruccion -> print_instr .)
    COS             reduce using rule 4 (instruccion -> print_instr .)
    SIN             reduce using rule 4 (instruccion -> print_instr .)
    LOG             reduce using rule 4 (instruccion -> print_instr .)
    LOG10           reduce using rule 4 (instruccion -> print_instr .)
    PARSE           reduce using rule 4 (instruccion -> print_instr .)
    TRUNC           reduce using rule 4 (instruccion -> print_instr .)
    FLOAT           reduce using rule 4 (instruccion -> print_instr .)
    STRING          reduce using rule 4 (instruccion -> print_instr .)
    TYPEOF          reduce using rule 4 (instruccion -> print_instr .)
    PUSH            reduce using rule 4 (instruccion -> print_instr .)
    POP             reduce using rule 4 (instruccion -> print_instr .)
    LENGTH          reduce using rule 4 (instruccion -> print_instr .)
    UPPERCASE       reduce using rule 4 (instruccion -> print_instr .)
    LOWERCASE       reduce using rule 4 (instruccion -> print_instr .)
    CORIZQ          reduce using rule 4 (instruccion -> print_instr .)
    $end            reduce using rule 4 (instruccion -> print_instr .)
    END             reduce using rule 4 (instruccion -> print_instr .)
    ELSE            reduce using rule 4 (instruccion -> print_instr .)
    ELSEIF          reduce using rule 4 (instruccion -> print_instr .)
    COMA            reduce using rule 4 (instruccion -> print_instr .)


state 5

    (5) instruccion -> declaracion_instr .

    BREAK           reduce using rule 5 (instruccion -> declaracion_instr .)
    CONTINUE        reduce using rule 5 (instruccion -> declaracion_instr .)
    RETURN          reduce using rule 5 (instruccion -> declaracion_instr .)
    PRINTLN         reduce using rule 5 (instruccion -> declaracion_instr .)
    PRINT           reduce using rule 5 (instruccion -> declaracion_instr .)
    LOCAL           reduce using rule 5 (instruccion -> declaracion_instr .)
    GLOBAL          reduce using rule 5 (instruccion -> declaracion_instr .)
    STRUCT          reduce using rule 5 (instruccion -> declaracion_instr .)
    MUTABLE         reduce using rule 5 (instruccion -> declaracion_instr .)
    ID              reduce using rule 5 (instruccion -> declaracion_instr .)
    FUNCTION        reduce using rule 5 (instruccion -> declaracion_instr .)
    IF              reduce using rule 5 (instruccion -> declaracion_instr .)
    WHILE           reduce using rule 5 (instruccion -> declaracion_instr .)
    FOR             reduce using rule 5 (instruccion -> declaracion_instr .)
    MENOS           reduce using rule 5 (instruccion -> declaracion_instr .)
    NOT             reduce using rule 5 (instruccion -> declaracion_instr .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion_instr .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion_instr .)
    CARACTER        reduce using rule 5 (instruccion -> declaracion_instr .)
    CADENA          reduce using rule 5 (instruccion -> declaracion_instr .)
    TRUE            reduce using rule 5 (instruccion -> declaracion_instr .)
    FALSE           reduce using rule 5 (instruccion -> declaracion_instr .)
    NULO            reduce using rule 5 (instruccion -> declaracion_instr .)
    SQRT            reduce using rule 5 (instruccion -> declaracion_instr .)
    TAN             reduce using rule 5 (instruccion -> declaracion_instr .)
    COS             reduce using rule 5 (instruccion -> declaracion_instr .)
    SIN             reduce using rule 5 (instruccion -> declaracion_instr .)
    LOG             reduce using rule 5 (instruccion -> declaracion_instr .)
    LOG10           reduce using rule 5 (instruccion -> declaracion_instr .)
    PARSE           reduce using rule 5 (instruccion -> declaracion_instr .)
    TRUNC           reduce using rule 5 (instruccion -> declaracion_instr .)
    FLOAT           reduce using rule 5 (instruccion -> declaracion_instr .)
    STRING          reduce using rule 5 (instruccion -> declaracion_instr .)
    TYPEOF          reduce using rule 5 (instruccion -> declaracion_instr .)
    PUSH            reduce using rule 5 (instruccion -> declaracion_instr .)
    POP             reduce using rule 5 (instruccion -> declaracion_instr .)
    LENGTH          reduce using rule 5 (instruccion -> declaracion_instr .)
    UPPERCASE       reduce using rule 5 (instruccion -> declaracion_instr .)
    LOWERCASE       reduce using rule 5 (instruccion -> declaracion_instr .)
    CORIZQ          reduce using rule 5 (instruccion -> declaracion_instr .)
    $end            reduce using rule 5 (instruccion -> declaracion_instr .)
    END             reduce using rule 5 (instruccion -> declaracion_instr .)
    ELSE            reduce using rule 5 (instruccion -> declaracion_instr .)
    ELSEIF          reduce using rule 5 (instruccion -> declaracion_instr .)
    COMA            reduce using rule 5 (instruccion -> declaracion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    BREAK           reduce using rule 6 (instruccion -> asignacion_instr .)
    CONTINUE        reduce using rule 6 (instruccion -> asignacion_instr .)
    RETURN          reduce using rule 6 (instruccion -> asignacion_instr .)
    PRINTLN         reduce using rule 6 (instruccion -> asignacion_instr .)
    PRINT           reduce using rule 6 (instruccion -> asignacion_instr .)
    LOCAL           reduce using rule 6 (instruccion -> asignacion_instr .)
    GLOBAL          reduce using rule 6 (instruccion -> asignacion_instr .)
    STRUCT          reduce using rule 6 (instruccion -> asignacion_instr .)
    MUTABLE         reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    FUNCTION        reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    WHILE           reduce using rule 6 (instruccion -> asignacion_instr .)
    FOR             reduce using rule 6 (instruccion -> asignacion_instr .)
    MENOS           reduce using rule 6 (instruccion -> asignacion_instr .)
    NOT             reduce using rule 6 (instruccion -> asignacion_instr .)
    DECIMAL         reduce using rule 6 (instruccion -> asignacion_instr .)
    ENTERO          reduce using rule 6 (instruccion -> asignacion_instr .)
    CARACTER        reduce using rule 6 (instruccion -> asignacion_instr .)
    CADENA          reduce using rule 6 (instruccion -> asignacion_instr .)
    TRUE            reduce using rule 6 (instruccion -> asignacion_instr .)
    FALSE           reduce using rule 6 (instruccion -> asignacion_instr .)
    NULO            reduce using rule 6 (instruccion -> asignacion_instr .)
    SQRT            reduce using rule 6 (instruccion -> asignacion_instr .)
    TAN             reduce using rule 6 (instruccion -> asignacion_instr .)
    COS             reduce using rule 6 (instruccion -> asignacion_instr .)
    SIN             reduce using rule 6 (instruccion -> asignacion_instr .)
    LOG             reduce using rule 6 (instruccion -> asignacion_instr .)
    LOG10           reduce using rule 6 (instruccion -> asignacion_instr .)
    PARSE           reduce using rule 6 (instruccion -> asignacion_instr .)
    TRUNC           reduce using rule 6 (instruccion -> asignacion_instr .)
    FLOAT           reduce using rule 6 (instruccion -> asignacion_instr .)
    STRING          reduce using rule 6 (instruccion -> asignacion_instr .)
    TYPEOF          reduce using rule 6 (instruccion -> asignacion_instr .)
    PUSH            reduce using rule 6 (instruccion -> asignacion_instr .)
    POP             reduce using rule 6 (instruccion -> asignacion_instr .)
    LENGTH          reduce using rule 6 (instruccion -> asignacion_instr .)
    UPPERCASE       reduce using rule 6 (instruccion -> asignacion_instr .)
    LOWERCASE       reduce using rule 6 (instruccion -> asignacion_instr .)
    CORIZQ          reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    END             reduce using rule 6 (instruccion -> asignacion_instr .)
    ELSE            reduce using rule 6 (instruccion -> asignacion_instr .)
    ELSEIF          reduce using rule 6 (instruccion -> asignacion_instr .)
    COMA            reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> declaracion_asignacion_instr .

    BREAK           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    CONTINUE        reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    RETURN          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    PRINTLN         reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    PRINT           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    LOCAL           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    GLOBAL          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    STRUCT          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    MUTABLE         reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    ID              reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    FUNCTION        reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    IF              reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    WHILE           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    FOR             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    MENOS           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    NOT             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    DECIMAL         reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    ENTERO          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    CARACTER        reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    CADENA          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    TRUE            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    FALSE           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    NULO            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    SQRT            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    TAN             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    COS             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    SIN             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    LOG             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    LOG10           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    PARSE           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    TRUNC           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    FLOAT           reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    STRING          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    TYPEOF          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    PUSH            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    POP             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    LENGTH          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    UPPERCASE       reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    LOWERCASE       reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    CORIZQ          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    $end            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    END             reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    ELSE            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    ELSEIF          reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)
    COMA            reduce using rule 7 (instruccion -> declaracion_asignacion_instr .)


state 8

    (8) instruccion -> llamadaFuncion_instr .

    BREAK           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    CONTINUE        reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    RETURN          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    PRINTLN         reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    PRINT           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    LOCAL           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    GLOBAL          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    STRUCT          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    MUTABLE         reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    ID              reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    FUNCTION        reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    IF              reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    WHILE           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    FOR             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    MENOS           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    NOT             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    DECIMAL         reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    ENTERO          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    CARACTER        reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    CADENA          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    TRUE            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    FALSE           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    NULO            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    SQRT            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    TAN             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    COS             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    SIN             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    LOG             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    LOG10           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    PARSE           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    TRUNC           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    FLOAT           reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    STRING          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    TYPEOF          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    PUSH            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    POP             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    LENGTH          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    UPPERCASE       reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    LOWERCASE       reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    CORIZQ          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    $end            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    END             reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    ELSE            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    ELSEIF          reduce using rule 8 (instruccion -> llamadaFuncion_instr .)
    COMA            reduce using rule 8 (instruccion -> llamadaFuncion_instr .)


state 9

    (9) instruccion -> funcion_instr .

    BREAK           reduce using rule 9 (instruccion -> funcion_instr .)
    CONTINUE        reduce using rule 9 (instruccion -> funcion_instr .)
    RETURN          reduce using rule 9 (instruccion -> funcion_instr .)
    PRINTLN         reduce using rule 9 (instruccion -> funcion_instr .)
    PRINT           reduce using rule 9 (instruccion -> funcion_instr .)
    LOCAL           reduce using rule 9 (instruccion -> funcion_instr .)
    GLOBAL          reduce using rule 9 (instruccion -> funcion_instr .)
    STRUCT          reduce using rule 9 (instruccion -> funcion_instr .)
    MUTABLE         reduce using rule 9 (instruccion -> funcion_instr .)
    ID              reduce using rule 9 (instruccion -> funcion_instr .)
    FUNCTION        reduce using rule 9 (instruccion -> funcion_instr .)
    IF              reduce using rule 9 (instruccion -> funcion_instr .)
    WHILE           reduce using rule 9 (instruccion -> funcion_instr .)
    FOR             reduce using rule 9 (instruccion -> funcion_instr .)
    MENOS           reduce using rule 9 (instruccion -> funcion_instr .)
    NOT             reduce using rule 9 (instruccion -> funcion_instr .)
    DECIMAL         reduce using rule 9 (instruccion -> funcion_instr .)
    ENTERO          reduce using rule 9 (instruccion -> funcion_instr .)
    CARACTER        reduce using rule 9 (instruccion -> funcion_instr .)
    CADENA          reduce using rule 9 (instruccion -> funcion_instr .)
    TRUE            reduce using rule 9 (instruccion -> funcion_instr .)
    FALSE           reduce using rule 9 (instruccion -> funcion_instr .)
    NULO            reduce using rule 9 (instruccion -> funcion_instr .)
    SQRT            reduce using rule 9 (instruccion -> funcion_instr .)
    TAN             reduce using rule 9 (instruccion -> funcion_instr .)
    COS             reduce using rule 9 (instruccion -> funcion_instr .)
    SIN             reduce using rule 9 (instruccion -> funcion_instr .)
    LOG             reduce using rule 9 (instruccion -> funcion_instr .)
    LOG10           reduce using rule 9 (instruccion -> funcion_instr .)
    PARSE           reduce using rule 9 (instruccion -> funcion_instr .)
    TRUNC           reduce using rule 9 (instruccion -> funcion_instr .)
    FLOAT           reduce using rule 9 (instruccion -> funcion_instr .)
    STRING          reduce using rule 9 (instruccion -> funcion_instr .)
    TYPEOF          reduce using rule 9 (instruccion -> funcion_instr .)
    PUSH            reduce using rule 9 (instruccion -> funcion_instr .)
    POP             reduce using rule 9 (instruccion -> funcion_instr .)
    LENGTH          reduce using rule 9 (instruccion -> funcion_instr .)
    UPPERCASE       reduce using rule 9 (instruccion -> funcion_instr .)
    LOWERCASE       reduce using rule 9 (instruccion -> funcion_instr .)
    CORIZQ          reduce using rule 9 (instruccion -> funcion_instr .)
    $end            reduce using rule 9 (instruccion -> funcion_instr .)
    END             reduce using rule 9 (instruccion -> funcion_instr .)
    ELSE            reduce using rule 9 (instruccion -> funcion_instr .)
    ELSEIF          reduce using rule 9 (instruccion -> funcion_instr .)
    COMA            reduce using rule 9 (instruccion -> funcion_instr .)


state 10

    (10) instruccion -> if_instr .

    BREAK           reduce using rule 10 (instruccion -> if_instr .)
    CONTINUE        reduce using rule 10 (instruccion -> if_instr .)
    RETURN          reduce using rule 10 (instruccion -> if_instr .)
    PRINTLN         reduce using rule 10 (instruccion -> if_instr .)
    PRINT           reduce using rule 10 (instruccion -> if_instr .)
    LOCAL           reduce using rule 10 (instruccion -> if_instr .)
    GLOBAL          reduce using rule 10 (instruccion -> if_instr .)
    STRUCT          reduce using rule 10 (instruccion -> if_instr .)
    MUTABLE         reduce using rule 10 (instruccion -> if_instr .)
    ID              reduce using rule 10 (instruccion -> if_instr .)
    FUNCTION        reduce using rule 10 (instruccion -> if_instr .)
    IF              reduce using rule 10 (instruccion -> if_instr .)
    WHILE           reduce using rule 10 (instruccion -> if_instr .)
    FOR             reduce using rule 10 (instruccion -> if_instr .)
    MENOS           reduce using rule 10 (instruccion -> if_instr .)
    NOT             reduce using rule 10 (instruccion -> if_instr .)
    DECIMAL         reduce using rule 10 (instruccion -> if_instr .)
    ENTERO          reduce using rule 10 (instruccion -> if_instr .)
    CARACTER        reduce using rule 10 (instruccion -> if_instr .)
    CADENA          reduce using rule 10 (instruccion -> if_instr .)
    TRUE            reduce using rule 10 (instruccion -> if_instr .)
    FALSE           reduce using rule 10 (instruccion -> if_instr .)
    NULO            reduce using rule 10 (instruccion -> if_instr .)
    SQRT            reduce using rule 10 (instruccion -> if_instr .)
    TAN             reduce using rule 10 (instruccion -> if_instr .)
    COS             reduce using rule 10 (instruccion -> if_instr .)
    SIN             reduce using rule 10 (instruccion -> if_instr .)
    LOG             reduce using rule 10 (instruccion -> if_instr .)
    LOG10           reduce using rule 10 (instruccion -> if_instr .)
    PARSE           reduce using rule 10 (instruccion -> if_instr .)
    TRUNC           reduce using rule 10 (instruccion -> if_instr .)
    FLOAT           reduce using rule 10 (instruccion -> if_instr .)
    STRING          reduce using rule 10 (instruccion -> if_instr .)
    TYPEOF          reduce using rule 10 (instruccion -> if_instr .)
    PUSH            reduce using rule 10 (instruccion -> if_instr .)
    POP             reduce using rule 10 (instruccion -> if_instr .)
    LENGTH          reduce using rule 10 (instruccion -> if_instr .)
    UPPERCASE       reduce using rule 10 (instruccion -> if_instr .)
    LOWERCASE       reduce using rule 10 (instruccion -> if_instr .)
    CORIZQ          reduce using rule 10 (instruccion -> if_instr .)
    $end            reduce using rule 10 (instruccion -> if_instr .)
    END             reduce using rule 10 (instruccion -> if_instr .)
    ELSE            reduce using rule 10 (instruccion -> if_instr .)
    ELSEIF          reduce using rule 10 (instruccion -> if_instr .)
    COMA            reduce using rule 10 (instruccion -> if_instr .)


state 11

    (11) instruccion -> while_instr .

    BREAK           reduce using rule 11 (instruccion -> while_instr .)
    CONTINUE        reduce using rule 11 (instruccion -> while_instr .)
    RETURN          reduce using rule 11 (instruccion -> while_instr .)
    PRINTLN         reduce using rule 11 (instruccion -> while_instr .)
    PRINT           reduce using rule 11 (instruccion -> while_instr .)
    LOCAL           reduce using rule 11 (instruccion -> while_instr .)
    GLOBAL          reduce using rule 11 (instruccion -> while_instr .)
    STRUCT          reduce using rule 11 (instruccion -> while_instr .)
    MUTABLE         reduce using rule 11 (instruccion -> while_instr .)
    ID              reduce using rule 11 (instruccion -> while_instr .)
    FUNCTION        reduce using rule 11 (instruccion -> while_instr .)
    IF              reduce using rule 11 (instruccion -> while_instr .)
    WHILE           reduce using rule 11 (instruccion -> while_instr .)
    FOR             reduce using rule 11 (instruccion -> while_instr .)
    MENOS           reduce using rule 11 (instruccion -> while_instr .)
    NOT             reduce using rule 11 (instruccion -> while_instr .)
    DECIMAL         reduce using rule 11 (instruccion -> while_instr .)
    ENTERO          reduce using rule 11 (instruccion -> while_instr .)
    CARACTER        reduce using rule 11 (instruccion -> while_instr .)
    CADENA          reduce using rule 11 (instruccion -> while_instr .)
    TRUE            reduce using rule 11 (instruccion -> while_instr .)
    FALSE           reduce using rule 11 (instruccion -> while_instr .)
    NULO            reduce using rule 11 (instruccion -> while_instr .)
    SQRT            reduce using rule 11 (instruccion -> while_instr .)
    TAN             reduce using rule 11 (instruccion -> while_instr .)
    COS             reduce using rule 11 (instruccion -> while_instr .)
    SIN             reduce using rule 11 (instruccion -> while_instr .)
    LOG             reduce using rule 11 (instruccion -> while_instr .)
    LOG10           reduce using rule 11 (instruccion -> while_instr .)
    PARSE           reduce using rule 11 (instruccion -> while_instr .)
    TRUNC           reduce using rule 11 (instruccion -> while_instr .)
    FLOAT           reduce using rule 11 (instruccion -> while_instr .)
    STRING          reduce using rule 11 (instruccion -> while_instr .)
    TYPEOF          reduce using rule 11 (instruccion -> while_instr .)
    PUSH            reduce using rule 11 (instruccion -> while_instr .)
    POP             reduce using rule 11 (instruccion -> while_instr .)
    LENGTH          reduce using rule 11 (instruccion -> while_instr .)
    UPPERCASE       reduce using rule 11 (instruccion -> while_instr .)
    LOWERCASE       reduce using rule 11 (instruccion -> while_instr .)
    CORIZQ          reduce using rule 11 (instruccion -> while_instr .)
    $end            reduce using rule 11 (instruccion -> while_instr .)
    END             reduce using rule 11 (instruccion -> while_instr .)
    ELSE            reduce using rule 11 (instruccion -> while_instr .)
    ELSEIF          reduce using rule 11 (instruccion -> while_instr .)
    COMA            reduce using rule 11 (instruccion -> while_instr .)


state 12

    (12) instruccion -> for_instr .

    BREAK           reduce using rule 12 (instruccion -> for_instr .)
    CONTINUE        reduce using rule 12 (instruccion -> for_instr .)
    RETURN          reduce using rule 12 (instruccion -> for_instr .)
    PRINTLN         reduce using rule 12 (instruccion -> for_instr .)
    PRINT           reduce using rule 12 (instruccion -> for_instr .)
    LOCAL           reduce using rule 12 (instruccion -> for_instr .)
    GLOBAL          reduce using rule 12 (instruccion -> for_instr .)
    STRUCT          reduce using rule 12 (instruccion -> for_instr .)
    MUTABLE         reduce using rule 12 (instruccion -> for_instr .)
    ID              reduce using rule 12 (instruccion -> for_instr .)
    FUNCTION        reduce using rule 12 (instruccion -> for_instr .)
    IF              reduce using rule 12 (instruccion -> for_instr .)
    WHILE           reduce using rule 12 (instruccion -> for_instr .)
    FOR             reduce using rule 12 (instruccion -> for_instr .)
    MENOS           reduce using rule 12 (instruccion -> for_instr .)
    NOT             reduce using rule 12 (instruccion -> for_instr .)
    DECIMAL         reduce using rule 12 (instruccion -> for_instr .)
    ENTERO          reduce using rule 12 (instruccion -> for_instr .)
    CARACTER        reduce using rule 12 (instruccion -> for_instr .)
    CADENA          reduce using rule 12 (instruccion -> for_instr .)
    TRUE            reduce using rule 12 (instruccion -> for_instr .)
    FALSE           reduce using rule 12 (instruccion -> for_instr .)
    NULO            reduce using rule 12 (instruccion -> for_instr .)
    SQRT            reduce using rule 12 (instruccion -> for_instr .)
    TAN             reduce using rule 12 (instruccion -> for_instr .)
    COS             reduce using rule 12 (instruccion -> for_instr .)
    SIN             reduce using rule 12 (instruccion -> for_instr .)
    LOG             reduce using rule 12 (instruccion -> for_instr .)
    LOG10           reduce using rule 12 (instruccion -> for_instr .)
    PARSE           reduce using rule 12 (instruccion -> for_instr .)
    TRUNC           reduce using rule 12 (instruccion -> for_instr .)
    FLOAT           reduce using rule 12 (instruccion -> for_instr .)
    STRING          reduce using rule 12 (instruccion -> for_instr .)
    TYPEOF          reduce using rule 12 (instruccion -> for_instr .)
    PUSH            reduce using rule 12 (instruccion -> for_instr .)
    POP             reduce using rule 12 (instruccion -> for_instr .)
    LENGTH          reduce using rule 12 (instruccion -> for_instr .)
    UPPERCASE       reduce using rule 12 (instruccion -> for_instr .)
    LOWERCASE       reduce using rule 12 (instruccion -> for_instr .)
    CORIZQ          reduce using rule 12 (instruccion -> for_instr .)
    $end            reduce using rule 12 (instruccion -> for_instr .)
    END             reduce using rule 12 (instruccion -> for_instr .)
    ELSE            reduce using rule 12 (instruccion -> for_instr .)
    ELSEIF          reduce using rule 12 (instruccion -> for_instr .)
    COMA            reduce using rule 12 (instruccion -> for_instr .)


state 13

    (13) instruccion -> BREAK .

    BREAK           reduce using rule 13 (instruccion -> BREAK .)
    CONTINUE        reduce using rule 13 (instruccion -> BREAK .)
    RETURN          reduce using rule 13 (instruccion -> BREAK .)
    PRINTLN         reduce using rule 13 (instruccion -> BREAK .)
    PRINT           reduce using rule 13 (instruccion -> BREAK .)
    LOCAL           reduce using rule 13 (instruccion -> BREAK .)
    GLOBAL          reduce using rule 13 (instruccion -> BREAK .)
    STRUCT          reduce using rule 13 (instruccion -> BREAK .)
    MUTABLE         reduce using rule 13 (instruccion -> BREAK .)
    ID              reduce using rule 13 (instruccion -> BREAK .)
    FUNCTION        reduce using rule 13 (instruccion -> BREAK .)
    IF              reduce using rule 13 (instruccion -> BREAK .)
    WHILE           reduce using rule 13 (instruccion -> BREAK .)
    FOR             reduce using rule 13 (instruccion -> BREAK .)
    MENOS           reduce using rule 13 (instruccion -> BREAK .)
    NOT             reduce using rule 13 (instruccion -> BREAK .)
    DECIMAL         reduce using rule 13 (instruccion -> BREAK .)
    ENTERO          reduce using rule 13 (instruccion -> BREAK .)
    CARACTER        reduce using rule 13 (instruccion -> BREAK .)
    CADENA          reduce using rule 13 (instruccion -> BREAK .)
    TRUE            reduce using rule 13 (instruccion -> BREAK .)
    FALSE           reduce using rule 13 (instruccion -> BREAK .)
    NULO            reduce using rule 13 (instruccion -> BREAK .)
    SQRT            reduce using rule 13 (instruccion -> BREAK .)
    TAN             reduce using rule 13 (instruccion -> BREAK .)
    COS             reduce using rule 13 (instruccion -> BREAK .)
    SIN             reduce using rule 13 (instruccion -> BREAK .)
    LOG             reduce using rule 13 (instruccion -> BREAK .)
    LOG10           reduce using rule 13 (instruccion -> BREAK .)
    PARSE           reduce using rule 13 (instruccion -> BREAK .)
    TRUNC           reduce using rule 13 (instruccion -> BREAK .)
    FLOAT           reduce using rule 13 (instruccion -> BREAK .)
    STRING          reduce using rule 13 (instruccion -> BREAK .)
    TYPEOF          reduce using rule 13 (instruccion -> BREAK .)
    PUSH            reduce using rule 13 (instruccion -> BREAK .)
    POP             reduce using rule 13 (instruccion -> BREAK .)
    LENGTH          reduce using rule 13 (instruccion -> BREAK .)
    UPPERCASE       reduce using rule 13 (instruccion -> BREAK .)
    LOWERCASE       reduce using rule 13 (instruccion -> BREAK .)
    CORIZQ          reduce using rule 13 (instruccion -> BREAK .)
    $end            reduce using rule 13 (instruccion -> BREAK .)
    END             reduce using rule 13 (instruccion -> BREAK .)
    ELSE            reduce using rule 13 (instruccion -> BREAK .)
    ELSEIF          reduce using rule 13 (instruccion -> BREAK .)
    COMA            reduce using rule 13 (instruccion -> BREAK .)


state 14

    (14) instruccion -> CONTINUE .

    BREAK           reduce using rule 14 (instruccion -> CONTINUE .)
    CONTINUE        reduce using rule 14 (instruccion -> CONTINUE .)
    RETURN          reduce using rule 14 (instruccion -> CONTINUE .)
    PRINTLN         reduce using rule 14 (instruccion -> CONTINUE .)
    PRINT           reduce using rule 14 (instruccion -> CONTINUE .)
    LOCAL           reduce using rule 14 (instruccion -> CONTINUE .)
    GLOBAL          reduce using rule 14 (instruccion -> CONTINUE .)
    STRUCT          reduce using rule 14 (instruccion -> CONTINUE .)
    MUTABLE         reduce using rule 14 (instruccion -> CONTINUE .)
    ID              reduce using rule 14 (instruccion -> CONTINUE .)
    FUNCTION        reduce using rule 14 (instruccion -> CONTINUE .)
    IF              reduce using rule 14 (instruccion -> CONTINUE .)
    WHILE           reduce using rule 14 (instruccion -> CONTINUE .)
    FOR             reduce using rule 14 (instruccion -> CONTINUE .)
    MENOS           reduce using rule 14 (instruccion -> CONTINUE .)
    NOT             reduce using rule 14 (instruccion -> CONTINUE .)
    DECIMAL         reduce using rule 14 (instruccion -> CONTINUE .)
    ENTERO          reduce using rule 14 (instruccion -> CONTINUE .)
    CARACTER        reduce using rule 14 (instruccion -> CONTINUE .)
    CADENA          reduce using rule 14 (instruccion -> CONTINUE .)
    TRUE            reduce using rule 14 (instruccion -> CONTINUE .)
    FALSE           reduce using rule 14 (instruccion -> CONTINUE .)
    NULO            reduce using rule 14 (instruccion -> CONTINUE .)
    SQRT            reduce using rule 14 (instruccion -> CONTINUE .)
    TAN             reduce using rule 14 (instruccion -> CONTINUE .)
    COS             reduce using rule 14 (instruccion -> CONTINUE .)
    SIN             reduce using rule 14 (instruccion -> CONTINUE .)
    LOG             reduce using rule 14 (instruccion -> CONTINUE .)
    LOG10           reduce using rule 14 (instruccion -> CONTINUE .)
    PARSE           reduce using rule 14 (instruccion -> CONTINUE .)
    TRUNC           reduce using rule 14 (instruccion -> CONTINUE .)
    FLOAT           reduce using rule 14 (instruccion -> CONTINUE .)
    STRING          reduce using rule 14 (instruccion -> CONTINUE .)
    TYPEOF          reduce using rule 14 (instruccion -> CONTINUE .)
    PUSH            reduce using rule 14 (instruccion -> CONTINUE .)
    POP             reduce using rule 14 (instruccion -> CONTINUE .)
    LENGTH          reduce using rule 14 (instruccion -> CONTINUE .)
    UPPERCASE       reduce using rule 14 (instruccion -> CONTINUE .)
    LOWERCASE       reduce using rule 14 (instruccion -> CONTINUE .)
    CORIZQ          reduce using rule 14 (instruccion -> CONTINUE .)
    $end            reduce using rule 14 (instruccion -> CONTINUE .)
    END             reduce using rule 14 (instruccion -> CONTINUE .)
    ELSE            reduce using rule 14 (instruccion -> CONTINUE .)
    ELSEIF          reduce using rule 14 (instruccion -> CONTINUE .)
    COMA            reduce using rule 14 (instruccion -> CONTINUE .)


state 15

    (15) instruccion -> RETURN .

    BREAK           reduce using rule 15 (instruccion -> RETURN .)
    CONTINUE        reduce using rule 15 (instruccion -> RETURN .)
    RETURN          reduce using rule 15 (instruccion -> RETURN .)
    PRINTLN         reduce using rule 15 (instruccion -> RETURN .)
    PRINT           reduce using rule 15 (instruccion -> RETURN .)
    LOCAL           reduce using rule 15 (instruccion -> RETURN .)
    GLOBAL          reduce using rule 15 (instruccion -> RETURN .)
    STRUCT          reduce using rule 15 (instruccion -> RETURN .)
    MUTABLE         reduce using rule 15 (instruccion -> RETURN .)
    ID              reduce using rule 15 (instruccion -> RETURN .)
    FUNCTION        reduce using rule 15 (instruccion -> RETURN .)
    IF              reduce using rule 15 (instruccion -> RETURN .)
    WHILE           reduce using rule 15 (instruccion -> RETURN .)
    FOR             reduce using rule 15 (instruccion -> RETURN .)
    MENOS           reduce using rule 15 (instruccion -> RETURN .)
    NOT             reduce using rule 15 (instruccion -> RETURN .)
    DECIMAL         reduce using rule 15 (instruccion -> RETURN .)
    ENTERO          reduce using rule 15 (instruccion -> RETURN .)
    CARACTER        reduce using rule 15 (instruccion -> RETURN .)
    CADENA          reduce using rule 15 (instruccion -> RETURN .)
    TRUE            reduce using rule 15 (instruccion -> RETURN .)
    FALSE           reduce using rule 15 (instruccion -> RETURN .)
    NULO            reduce using rule 15 (instruccion -> RETURN .)
    SQRT            reduce using rule 15 (instruccion -> RETURN .)
    TAN             reduce using rule 15 (instruccion -> RETURN .)
    COS             reduce using rule 15 (instruccion -> RETURN .)
    SIN             reduce using rule 15 (instruccion -> RETURN .)
    LOG             reduce using rule 15 (instruccion -> RETURN .)
    LOG10           reduce using rule 15 (instruccion -> RETURN .)
    PARSE           reduce using rule 15 (instruccion -> RETURN .)
    TRUNC           reduce using rule 15 (instruccion -> RETURN .)
    FLOAT           reduce using rule 15 (instruccion -> RETURN .)
    STRING          reduce using rule 15 (instruccion -> RETURN .)
    TYPEOF          reduce using rule 15 (instruccion -> RETURN .)
    PUSH            reduce using rule 15 (instruccion -> RETURN .)
    POP             reduce using rule 15 (instruccion -> RETURN .)
    LENGTH          reduce using rule 15 (instruccion -> RETURN .)
    UPPERCASE       reduce using rule 15 (instruccion -> RETURN .)
    LOWERCASE       reduce using rule 15 (instruccion -> RETURN .)
    CORIZQ          reduce using rule 15 (instruccion -> RETURN .)
    $end            reduce using rule 15 (instruccion -> RETURN .)
    END             reduce using rule 15 (instruccion -> RETURN .)
    ELSE            reduce using rule 15 (instruccion -> RETURN .)
    ELSEIF          reduce using rule 15 (instruccion -> RETURN .)
    COMA            reduce using rule 15 (instruccion -> RETURN .)


state 16

    (16) print_instr -> PRINTLN . PARIZQ expresiones PARDER PUNTOYCOMA

    PARIZQ          shift and go to state 55


state 17

    (17) print_instr -> PRINT . PARIZQ expresiones PARDER PUNTOYCOMA

    PARIZQ          shift and go to state 56


state 18

    (18) declaracion_instr -> LOCAL . ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> LOCAL . ID PUNTOYCOMA

    ID              shift and go to state 57


state 19

    (29) declaracion_asignacion_instr -> ID . IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> ID . PARIZQ expresiones PARDER PUNTOYCOMA
    (88) expresion -> ID . PARIZQ expresiones PARDER
    (89) expresion -> ID . expresion
    (90) expresion -> ID .
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IGUAL           shift and go to state 59
    PARIZQ          shift and go to state 61
    MAS             reduce using rule 90 (expresion -> ID .)
    POR             reduce using rule 90 (expresion -> ID .)
    DIV             reduce using rule 90 (expresion -> ID .)
    POTENCIA        reduce using rule 90 (expresion -> ID .)
    MODULO          reduce using rule 90 (expresion -> ID .)
    MAYOR           reduce using rule 90 (expresion -> ID .)
    MENOR           reduce using rule 90 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 90 (expresion -> ID .)
    MENORIGUAL      reduce using rule 90 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 90 (expresion -> ID .)
    DIFERENTE       reduce using rule 90 (expresion -> ID .)
    OR              reduce using rule 90 (expresion -> ID .)
    AND             reduce using rule 90 (expresion -> ID .)
    PUNTO           reduce using rule 90 (expresion -> ID .)
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

  ! IGUAL           [ reduce using rule 90 (expresion -> ID .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> ID .) ]

    expresion                      shift and go to state 60

state 20

    (28) asignacion_instr -> expresion . IGUAL expresion PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 21

    (19) declaracion_instr -> GLOBAL . ID IGUAL expresion PUNTOYCOMA
    (21) declaracion_instr -> GLOBAL . ID PUNTOYCOMA

    ID              shift and go to state 78


state 22

    (22) declaracion_instr -> STRUCT . ID struct_variables END PUNTOYCOMA

    ID              shift and go to state 79


state 23

    (23) declaracion_instr -> MUTABLE . STRUCT ID struct_variables END PUNTOYCOMA

    STRUCT          shift and go to state 80


state 24

    (31) funcion_instr -> FUNCTION . ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA

    ID              shift and go to state 81


state 25

    (36) if_instr -> IF . expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> IF . expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> IF . expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 82

state 26

    (42) while_instr -> WHILE . expresion instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 83

state 27

    (43) for_instr -> FOR . ID IN for_instr_opciones instrucciones END PUNTOYCOMA

    ID              shift and go to state 84


state 28

    (62) expresion -> MENOS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 85

state 29

    (63) expresion -> NOT . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 86

state 30

    (64) expresion -> DECIMAL .

    IGUAL           reduce using rule 64 (expresion -> DECIMAL .)
    MAS             reduce using rule 64 (expresion -> DECIMAL .)
    MENOS           reduce using rule 64 (expresion -> DECIMAL .)
    POR             reduce using rule 64 (expresion -> DECIMAL .)
    DIV             reduce using rule 64 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 64 (expresion -> DECIMAL .)
    MODULO          reduce using rule 64 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 64 (expresion -> DECIMAL .)
    MENOR           reduce using rule 64 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 64 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 64 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 64 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 64 (expresion -> DECIMAL .)
    OR              reduce using rule 64 (expresion -> DECIMAL .)
    AND             reduce using rule 64 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 64 (expresion -> DECIMAL .)
    BREAK           reduce using rule 64 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 64 (expresion -> DECIMAL .)
    RETURN          reduce using rule 64 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 64 (expresion -> DECIMAL .)
    PRINT           reduce using rule 64 (expresion -> DECIMAL .)
    LOCAL           reduce using rule 64 (expresion -> DECIMAL .)
    GLOBAL          reduce using rule 64 (expresion -> DECIMAL .)
    STRUCT          reduce using rule 64 (expresion -> DECIMAL .)
    MUTABLE         reduce using rule 64 (expresion -> DECIMAL .)
    ID              reduce using rule 64 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 64 (expresion -> DECIMAL .)
    IF              reduce using rule 64 (expresion -> DECIMAL .)
    WHILE           reduce using rule 64 (expresion -> DECIMAL .)
    FOR             reduce using rule 64 (expresion -> DECIMAL .)
    NOT             reduce using rule 64 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 64 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 64 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 64 (expresion -> DECIMAL .)
    CADENA          reduce using rule 64 (expresion -> DECIMAL .)
    TRUE            reduce using rule 64 (expresion -> DECIMAL .)
    FALSE           reduce using rule 64 (expresion -> DECIMAL .)
    NULO            reduce using rule 64 (expresion -> DECIMAL .)
    SQRT            reduce using rule 64 (expresion -> DECIMAL .)
    TAN             reduce using rule 64 (expresion -> DECIMAL .)
    COS             reduce using rule 64 (expresion -> DECIMAL .)
    SIN             reduce using rule 64 (expresion -> DECIMAL .)
    LOG             reduce using rule 64 (expresion -> DECIMAL .)
    LOG10           reduce using rule 64 (expresion -> DECIMAL .)
    PARSE           reduce using rule 64 (expresion -> DECIMAL .)
    TRUNC           reduce using rule 64 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 64 (expresion -> DECIMAL .)
    STRING          reduce using rule 64 (expresion -> DECIMAL .)
    TYPEOF          reduce using rule 64 (expresion -> DECIMAL .)
    PUSH            reduce using rule 64 (expresion -> DECIMAL .)
    POP             reduce using rule 64 (expresion -> DECIMAL .)
    LENGTH          reduce using rule 64 (expresion -> DECIMAL .)
    UPPERCASE       reduce using rule 64 (expresion -> DECIMAL .)
    LOWERCASE       reduce using rule 64 (expresion -> DECIMAL .)
    CORIZQ          reduce using rule 64 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 64 (expresion -> DECIMAL .)
    CORDER          reduce using rule 64 (expresion -> DECIMAL .)
    COMA            reduce using rule 64 (expresion -> DECIMAL .)
    PARDER          reduce using rule 64 (expresion -> DECIMAL .)
    DOSPUNTOSDOSPUNTOS reduce using rule 64 (expresion -> DECIMAL .)
    PUNTOYCOMA      reduce using rule 64 (expresion -> DECIMAL .)


state 31

    (65) expresion -> ENTERO .

    IGUAL           reduce using rule 65 (expresion -> ENTERO .)
    MAS             reduce using rule 65 (expresion -> ENTERO .)
    MENOS           reduce using rule 65 (expresion -> ENTERO .)
    POR             reduce using rule 65 (expresion -> ENTERO .)
    DIV             reduce using rule 65 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 65 (expresion -> ENTERO .)
    MODULO          reduce using rule 65 (expresion -> ENTERO .)
    MAYOR           reduce using rule 65 (expresion -> ENTERO .)
    MENOR           reduce using rule 65 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 65 (expresion -> ENTERO .)
    OR              reduce using rule 65 (expresion -> ENTERO .)
    AND             reduce using rule 65 (expresion -> ENTERO .)
    PUNTO           reduce using rule 65 (expresion -> ENTERO .)
    BREAK           reduce using rule 65 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 65 (expresion -> ENTERO .)
    RETURN          reduce using rule 65 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 65 (expresion -> ENTERO .)
    PRINT           reduce using rule 65 (expresion -> ENTERO .)
    LOCAL           reduce using rule 65 (expresion -> ENTERO .)
    GLOBAL          reduce using rule 65 (expresion -> ENTERO .)
    STRUCT          reduce using rule 65 (expresion -> ENTERO .)
    MUTABLE         reduce using rule 65 (expresion -> ENTERO .)
    ID              reduce using rule 65 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 65 (expresion -> ENTERO .)
    IF              reduce using rule 65 (expresion -> ENTERO .)
    WHILE           reduce using rule 65 (expresion -> ENTERO .)
    FOR             reduce using rule 65 (expresion -> ENTERO .)
    NOT             reduce using rule 65 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 65 (expresion -> ENTERO .)
    ENTERO          reduce using rule 65 (expresion -> ENTERO .)
    CARACTER        reduce using rule 65 (expresion -> ENTERO .)
    CADENA          reduce using rule 65 (expresion -> ENTERO .)
    TRUE            reduce using rule 65 (expresion -> ENTERO .)
    FALSE           reduce using rule 65 (expresion -> ENTERO .)
    NULO            reduce using rule 65 (expresion -> ENTERO .)
    SQRT            reduce using rule 65 (expresion -> ENTERO .)
    TAN             reduce using rule 65 (expresion -> ENTERO .)
    COS             reduce using rule 65 (expresion -> ENTERO .)
    SIN             reduce using rule 65 (expresion -> ENTERO .)
    LOG             reduce using rule 65 (expresion -> ENTERO .)
    LOG10           reduce using rule 65 (expresion -> ENTERO .)
    PARSE           reduce using rule 65 (expresion -> ENTERO .)
    TRUNC           reduce using rule 65 (expresion -> ENTERO .)
    FLOAT           reduce using rule 65 (expresion -> ENTERO .)
    STRING          reduce using rule 65 (expresion -> ENTERO .)
    TYPEOF          reduce using rule 65 (expresion -> ENTERO .)
    PUSH            reduce using rule 65 (expresion -> ENTERO .)
    POP             reduce using rule 65 (expresion -> ENTERO .)
    LENGTH          reduce using rule 65 (expresion -> ENTERO .)
    UPPERCASE       reduce using rule 65 (expresion -> ENTERO .)
    LOWERCASE       reduce using rule 65 (expresion -> ENTERO .)
    CORIZQ          reduce using rule 65 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 65 (expresion -> ENTERO .)
    CORDER          reduce using rule 65 (expresion -> ENTERO .)
    COMA            reduce using rule 65 (expresion -> ENTERO .)
    PARDER          reduce using rule 65 (expresion -> ENTERO .)
    DOSPUNTOSDOSPUNTOS reduce using rule 65 (expresion -> ENTERO .)
    PUNTOYCOMA      reduce using rule 65 (expresion -> ENTERO .)


state 32

    (66) expresion -> CARACTER .

    IGUAL           reduce using rule 66 (expresion -> CARACTER .)
    MAS             reduce using rule 66 (expresion -> CARACTER .)
    MENOS           reduce using rule 66 (expresion -> CARACTER .)
    POR             reduce using rule 66 (expresion -> CARACTER .)
    DIV             reduce using rule 66 (expresion -> CARACTER .)
    POTENCIA        reduce using rule 66 (expresion -> CARACTER .)
    MODULO          reduce using rule 66 (expresion -> CARACTER .)
    MAYOR           reduce using rule 66 (expresion -> CARACTER .)
    MENOR           reduce using rule 66 (expresion -> CARACTER .)
    MAYORIGUAL      reduce using rule 66 (expresion -> CARACTER .)
    MENORIGUAL      reduce using rule 66 (expresion -> CARACTER .)
    IGUALIGUAL      reduce using rule 66 (expresion -> CARACTER .)
    DIFERENTE       reduce using rule 66 (expresion -> CARACTER .)
    OR              reduce using rule 66 (expresion -> CARACTER .)
    AND             reduce using rule 66 (expresion -> CARACTER .)
    PUNTO           reduce using rule 66 (expresion -> CARACTER .)
    BREAK           reduce using rule 66 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 66 (expresion -> CARACTER .)
    RETURN          reduce using rule 66 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 66 (expresion -> CARACTER .)
    PRINT           reduce using rule 66 (expresion -> CARACTER .)
    LOCAL           reduce using rule 66 (expresion -> CARACTER .)
    GLOBAL          reduce using rule 66 (expresion -> CARACTER .)
    STRUCT          reduce using rule 66 (expresion -> CARACTER .)
    MUTABLE         reduce using rule 66 (expresion -> CARACTER .)
    ID              reduce using rule 66 (expresion -> CARACTER .)
    FUNCTION        reduce using rule 66 (expresion -> CARACTER .)
    IF              reduce using rule 66 (expresion -> CARACTER .)
    WHILE           reduce using rule 66 (expresion -> CARACTER .)
    FOR             reduce using rule 66 (expresion -> CARACTER .)
    NOT             reduce using rule 66 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 66 (expresion -> CARACTER .)
    ENTERO          reduce using rule 66 (expresion -> CARACTER .)
    CARACTER        reduce using rule 66 (expresion -> CARACTER .)
    CADENA          reduce using rule 66 (expresion -> CARACTER .)
    TRUE            reduce using rule 66 (expresion -> CARACTER .)
    FALSE           reduce using rule 66 (expresion -> CARACTER .)
    NULO            reduce using rule 66 (expresion -> CARACTER .)
    SQRT            reduce using rule 66 (expresion -> CARACTER .)
    TAN             reduce using rule 66 (expresion -> CARACTER .)
    COS             reduce using rule 66 (expresion -> CARACTER .)
    SIN             reduce using rule 66 (expresion -> CARACTER .)
    LOG             reduce using rule 66 (expresion -> CARACTER .)
    LOG10           reduce using rule 66 (expresion -> CARACTER .)
    PARSE           reduce using rule 66 (expresion -> CARACTER .)
    TRUNC           reduce using rule 66 (expresion -> CARACTER .)
    FLOAT           reduce using rule 66 (expresion -> CARACTER .)
    STRING          reduce using rule 66 (expresion -> CARACTER .)
    TYPEOF          reduce using rule 66 (expresion -> CARACTER .)
    PUSH            reduce using rule 66 (expresion -> CARACTER .)
    POP             reduce using rule 66 (expresion -> CARACTER .)
    LENGTH          reduce using rule 66 (expresion -> CARACTER .)
    UPPERCASE       reduce using rule 66 (expresion -> CARACTER .)
    LOWERCASE       reduce using rule 66 (expresion -> CARACTER .)
    CORIZQ          reduce using rule 66 (expresion -> CARACTER .)
    DOSPUNTOS       reduce using rule 66 (expresion -> CARACTER .)
    CORDER          reduce using rule 66 (expresion -> CARACTER .)
    COMA            reduce using rule 66 (expresion -> CARACTER .)
    PARDER          reduce using rule 66 (expresion -> CARACTER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 66 (expresion -> CARACTER .)
    PUNTOYCOMA      reduce using rule 66 (expresion -> CARACTER .)


state 33

    (67) expresion -> CADENA .

    IGUAL           reduce using rule 67 (expresion -> CADENA .)
    MAS             reduce using rule 67 (expresion -> CADENA .)
    MENOS           reduce using rule 67 (expresion -> CADENA .)
    POR             reduce using rule 67 (expresion -> CADENA .)
    DIV             reduce using rule 67 (expresion -> CADENA .)
    POTENCIA        reduce using rule 67 (expresion -> CADENA .)
    MODULO          reduce using rule 67 (expresion -> CADENA .)
    MAYOR           reduce using rule 67 (expresion -> CADENA .)
    MENOR           reduce using rule 67 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 67 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 67 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 67 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 67 (expresion -> CADENA .)
    OR              reduce using rule 67 (expresion -> CADENA .)
    AND             reduce using rule 67 (expresion -> CADENA .)
    PUNTO           reduce using rule 67 (expresion -> CADENA .)
    BREAK           reduce using rule 67 (expresion -> CADENA .)
    CONTINUE        reduce using rule 67 (expresion -> CADENA .)
    RETURN          reduce using rule 67 (expresion -> CADENA .)
    PRINTLN         reduce using rule 67 (expresion -> CADENA .)
    PRINT           reduce using rule 67 (expresion -> CADENA .)
    LOCAL           reduce using rule 67 (expresion -> CADENA .)
    GLOBAL          reduce using rule 67 (expresion -> CADENA .)
    STRUCT          reduce using rule 67 (expresion -> CADENA .)
    MUTABLE         reduce using rule 67 (expresion -> CADENA .)
    ID              reduce using rule 67 (expresion -> CADENA .)
    FUNCTION        reduce using rule 67 (expresion -> CADENA .)
    IF              reduce using rule 67 (expresion -> CADENA .)
    WHILE           reduce using rule 67 (expresion -> CADENA .)
    FOR             reduce using rule 67 (expresion -> CADENA .)
    NOT             reduce using rule 67 (expresion -> CADENA .)
    DECIMAL         reduce using rule 67 (expresion -> CADENA .)
    ENTERO          reduce using rule 67 (expresion -> CADENA .)
    CARACTER        reduce using rule 67 (expresion -> CADENA .)
    CADENA          reduce using rule 67 (expresion -> CADENA .)
    TRUE            reduce using rule 67 (expresion -> CADENA .)
    FALSE           reduce using rule 67 (expresion -> CADENA .)
    NULO            reduce using rule 67 (expresion -> CADENA .)
    SQRT            reduce using rule 67 (expresion -> CADENA .)
    TAN             reduce using rule 67 (expresion -> CADENA .)
    COS             reduce using rule 67 (expresion -> CADENA .)
    SIN             reduce using rule 67 (expresion -> CADENA .)
    LOG             reduce using rule 67 (expresion -> CADENA .)
    LOG10           reduce using rule 67 (expresion -> CADENA .)
    PARSE           reduce using rule 67 (expresion -> CADENA .)
    TRUNC           reduce using rule 67 (expresion -> CADENA .)
    FLOAT           reduce using rule 67 (expresion -> CADENA .)
    STRING          reduce using rule 67 (expresion -> CADENA .)
    TYPEOF          reduce using rule 67 (expresion -> CADENA .)
    PUSH            reduce using rule 67 (expresion -> CADENA .)
    POP             reduce using rule 67 (expresion -> CADENA .)
    LENGTH          reduce using rule 67 (expresion -> CADENA .)
    UPPERCASE       reduce using rule 67 (expresion -> CADENA .)
    LOWERCASE       reduce using rule 67 (expresion -> CADENA .)
    CORIZQ          reduce using rule 67 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 67 (expresion -> CADENA .)
    CORDER          reduce using rule 67 (expresion -> CADENA .)
    COMA            reduce using rule 67 (expresion -> CADENA .)
    PARDER          reduce using rule 67 (expresion -> CADENA .)
    DOSPUNTOSDOSPUNTOS reduce using rule 67 (expresion -> CADENA .)
    PUNTOYCOMA      reduce using rule 67 (expresion -> CADENA .)


state 34

    (68) expresion -> TRUE .

    IGUAL           reduce using rule 68 (expresion -> TRUE .)
    MAS             reduce using rule 68 (expresion -> TRUE .)
    MENOS           reduce using rule 68 (expresion -> TRUE .)
    POR             reduce using rule 68 (expresion -> TRUE .)
    DIV             reduce using rule 68 (expresion -> TRUE .)
    POTENCIA        reduce using rule 68 (expresion -> TRUE .)
    MODULO          reduce using rule 68 (expresion -> TRUE .)
    MAYOR           reduce using rule 68 (expresion -> TRUE .)
    MENOR           reduce using rule 68 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 68 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 68 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 68 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 68 (expresion -> TRUE .)
    OR              reduce using rule 68 (expresion -> TRUE .)
    AND             reduce using rule 68 (expresion -> TRUE .)
    PUNTO           reduce using rule 68 (expresion -> TRUE .)
    BREAK           reduce using rule 68 (expresion -> TRUE .)
    CONTINUE        reduce using rule 68 (expresion -> TRUE .)
    RETURN          reduce using rule 68 (expresion -> TRUE .)
    PRINTLN         reduce using rule 68 (expresion -> TRUE .)
    PRINT           reduce using rule 68 (expresion -> TRUE .)
    LOCAL           reduce using rule 68 (expresion -> TRUE .)
    GLOBAL          reduce using rule 68 (expresion -> TRUE .)
    STRUCT          reduce using rule 68 (expresion -> TRUE .)
    MUTABLE         reduce using rule 68 (expresion -> TRUE .)
    ID              reduce using rule 68 (expresion -> TRUE .)
    FUNCTION        reduce using rule 68 (expresion -> TRUE .)
    IF              reduce using rule 68 (expresion -> TRUE .)
    WHILE           reduce using rule 68 (expresion -> TRUE .)
    FOR             reduce using rule 68 (expresion -> TRUE .)
    NOT             reduce using rule 68 (expresion -> TRUE .)
    DECIMAL         reduce using rule 68 (expresion -> TRUE .)
    ENTERO          reduce using rule 68 (expresion -> TRUE .)
    CARACTER        reduce using rule 68 (expresion -> TRUE .)
    CADENA          reduce using rule 68 (expresion -> TRUE .)
    TRUE            reduce using rule 68 (expresion -> TRUE .)
    FALSE           reduce using rule 68 (expresion -> TRUE .)
    NULO            reduce using rule 68 (expresion -> TRUE .)
    SQRT            reduce using rule 68 (expresion -> TRUE .)
    TAN             reduce using rule 68 (expresion -> TRUE .)
    COS             reduce using rule 68 (expresion -> TRUE .)
    SIN             reduce using rule 68 (expresion -> TRUE .)
    LOG             reduce using rule 68 (expresion -> TRUE .)
    LOG10           reduce using rule 68 (expresion -> TRUE .)
    PARSE           reduce using rule 68 (expresion -> TRUE .)
    TRUNC           reduce using rule 68 (expresion -> TRUE .)
    FLOAT           reduce using rule 68 (expresion -> TRUE .)
    STRING          reduce using rule 68 (expresion -> TRUE .)
    TYPEOF          reduce using rule 68 (expresion -> TRUE .)
    PUSH            reduce using rule 68 (expresion -> TRUE .)
    POP             reduce using rule 68 (expresion -> TRUE .)
    LENGTH          reduce using rule 68 (expresion -> TRUE .)
    UPPERCASE       reduce using rule 68 (expresion -> TRUE .)
    LOWERCASE       reduce using rule 68 (expresion -> TRUE .)
    CORIZQ          reduce using rule 68 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 68 (expresion -> TRUE .)
    CORDER          reduce using rule 68 (expresion -> TRUE .)
    COMA            reduce using rule 68 (expresion -> TRUE .)
    PARDER          reduce using rule 68 (expresion -> TRUE .)
    DOSPUNTOSDOSPUNTOS reduce using rule 68 (expresion -> TRUE .)
    PUNTOYCOMA      reduce using rule 68 (expresion -> TRUE .)


state 35

    (69) expresion -> FALSE .

    IGUAL           reduce using rule 69 (expresion -> FALSE .)
    MAS             reduce using rule 69 (expresion -> FALSE .)
    MENOS           reduce using rule 69 (expresion -> FALSE .)
    POR             reduce using rule 69 (expresion -> FALSE .)
    DIV             reduce using rule 69 (expresion -> FALSE .)
    POTENCIA        reduce using rule 69 (expresion -> FALSE .)
    MODULO          reduce using rule 69 (expresion -> FALSE .)
    MAYOR           reduce using rule 69 (expresion -> FALSE .)
    MENOR           reduce using rule 69 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 69 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 69 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 69 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 69 (expresion -> FALSE .)
    OR              reduce using rule 69 (expresion -> FALSE .)
    AND             reduce using rule 69 (expresion -> FALSE .)
    PUNTO           reduce using rule 69 (expresion -> FALSE .)
    BREAK           reduce using rule 69 (expresion -> FALSE .)
    CONTINUE        reduce using rule 69 (expresion -> FALSE .)
    RETURN          reduce using rule 69 (expresion -> FALSE .)
    PRINTLN         reduce using rule 69 (expresion -> FALSE .)
    PRINT           reduce using rule 69 (expresion -> FALSE .)
    LOCAL           reduce using rule 69 (expresion -> FALSE .)
    GLOBAL          reduce using rule 69 (expresion -> FALSE .)
    STRUCT          reduce using rule 69 (expresion -> FALSE .)
    MUTABLE         reduce using rule 69 (expresion -> FALSE .)
    ID              reduce using rule 69 (expresion -> FALSE .)
    FUNCTION        reduce using rule 69 (expresion -> FALSE .)
    IF              reduce using rule 69 (expresion -> FALSE .)
    WHILE           reduce using rule 69 (expresion -> FALSE .)
    FOR             reduce using rule 69 (expresion -> FALSE .)
    NOT             reduce using rule 69 (expresion -> FALSE .)
    DECIMAL         reduce using rule 69 (expresion -> FALSE .)
    ENTERO          reduce using rule 69 (expresion -> FALSE .)
    CARACTER        reduce using rule 69 (expresion -> FALSE .)
    CADENA          reduce using rule 69 (expresion -> FALSE .)
    TRUE            reduce using rule 69 (expresion -> FALSE .)
    FALSE           reduce using rule 69 (expresion -> FALSE .)
    NULO            reduce using rule 69 (expresion -> FALSE .)
    SQRT            reduce using rule 69 (expresion -> FALSE .)
    TAN             reduce using rule 69 (expresion -> FALSE .)
    COS             reduce using rule 69 (expresion -> FALSE .)
    SIN             reduce using rule 69 (expresion -> FALSE .)
    LOG             reduce using rule 69 (expresion -> FALSE .)
    LOG10           reduce using rule 69 (expresion -> FALSE .)
    PARSE           reduce using rule 69 (expresion -> FALSE .)
    TRUNC           reduce using rule 69 (expresion -> FALSE .)
    FLOAT           reduce using rule 69 (expresion -> FALSE .)
    STRING          reduce using rule 69 (expresion -> FALSE .)
    TYPEOF          reduce using rule 69 (expresion -> FALSE .)
    PUSH            reduce using rule 69 (expresion -> FALSE .)
    POP             reduce using rule 69 (expresion -> FALSE .)
    LENGTH          reduce using rule 69 (expresion -> FALSE .)
    UPPERCASE       reduce using rule 69 (expresion -> FALSE .)
    LOWERCASE       reduce using rule 69 (expresion -> FALSE .)
    CORIZQ          reduce using rule 69 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 69 (expresion -> FALSE .)
    CORDER          reduce using rule 69 (expresion -> FALSE .)
    COMA            reduce using rule 69 (expresion -> FALSE .)
    PARDER          reduce using rule 69 (expresion -> FALSE .)
    DOSPUNTOSDOSPUNTOS reduce using rule 69 (expresion -> FALSE .)
    PUNTOYCOMA      reduce using rule 69 (expresion -> FALSE .)


state 36

    (70) expresion -> NULO .

    IGUAL           reduce using rule 70 (expresion -> NULO .)
    MAS             reduce using rule 70 (expresion -> NULO .)
    MENOS           reduce using rule 70 (expresion -> NULO .)
    POR             reduce using rule 70 (expresion -> NULO .)
    DIV             reduce using rule 70 (expresion -> NULO .)
    POTENCIA        reduce using rule 70 (expresion -> NULO .)
    MODULO          reduce using rule 70 (expresion -> NULO .)
    MAYOR           reduce using rule 70 (expresion -> NULO .)
    MENOR           reduce using rule 70 (expresion -> NULO .)
    MAYORIGUAL      reduce using rule 70 (expresion -> NULO .)
    MENORIGUAL      reduce using rule 70 (expresion -> NULO .)
    IGUALIGUAL      reduce using rule 70 (expresion -> NULO .)
    DIFERENTE       reduce using rule 70 (expresion -> NULO .)
    OR              reduce using rule 70 (expresion -> NULO .)
    AND             reduce using rule 70 (expresion -> NULO .)
    PUNTO           reduce using rule 70 (expresion -> NULO .)
    BREAK           reduce using rule 70 (expresion -> NULO .)
    CONTINUE        reduce using rule 70 (expresion -> NULO .)
    RETURN          reduce using rule 70 (expresion -> NULO .)
    PRINTLN         reduce using rule 70 (expresion -> NULO .)
    PRINT           reduce using rule 70 (expresion -> NULO .)
    LOCAL           reduce using rule 70 (expresion -> NULO .)
    GLOBAL          reduce using rule 70 (expresion -> NULO .)
    STRUCT          reduce using rule 70 (expresion -> NULO .)
    MUTABLE         reduce using rule 70 (expresion -> NULO .)
    ID              reduce using rule 70 (expresion -> NULO .)
    FUNCTION        reduce using rule 70 (expresion -> NULO .)
    IF              reduce using rule 70 (expresion -> NULO .)
    WHILE           reduce using rule 70 (expresion -> NULO .)
    FOR             reduce using rule 70 (expresion -> NULO .)
    NOT             reduce using rule 70 (expresion -> NULO .)
    DECIMAL         reduce using rule 70 (expresion -> NULO .)
    ENTERO          reduce using rule 70 (expresion -> NULO .)
    CARACTER        reduce using rule 70 (expresion -> NULO .)
    CADENA          reduce using rule 70 (expresion -> NULO .)
    TRUE            reduce using rule 70 (expresion -> NULO .)
    FALSE           reduce using rule 70 (expresion -> NULO .)
    NULO            reduce using rule 70 (expresion -> NULO .)
    SQRT            reduce using rule 70 (expresion -> NULO .)
    TAN             reduce using rule 70 (expresion -> NULO .)
    COS             reduce using rule 70 (expresion -> NULO .)
    SIN             reduce using rule 70 (expresion -> NULO .)
    LOG             reduce using rule 70 (expresion -> NULO .)
    LOG10           reduce using rule 70 (expresion -> NULO .)
    PARSE           reduce using rule 70 (expresion -> NULO .)
    TRUNC           reduce using rule 70 (expresion -> NULO .)
    FLOAT           reduce using rule 70 (expresion -> NULO .)
    STRING          reduce using rule 70 (expresion -> NULO .)
    TYPEOF          reduce using rule 70 (expresion -> NULO .)
    PUSH            reduce using rule 70 (expresion -> NULO .)
    POP             reduce using rule 70 (expresion -> NULO .)
    LENGTH          reduce using rule 70 (expresion -> NULO .)
    UPPERCASE       reduce using rule 70 (expresion -> NULO .)
    LOWERCASE       reduce using rule 70 (expresion -> NULO .)
    CORIZQ          reduce using rule 70 (expresion -> NULO .)
    DOSPUNTOS       reduce using rule 70 (expresion -> NULO .)
    CORDER          reduce using rule 70 (expresion -> NULO .)
    COMA            reduce using rule 70 (expresion -> NULO .)
    PARDER          reduce using rule 70 (expresion -> NULO .)
    DOSPUNTOSDOSPUNTOS reduce using rule 70 (expresion -> NULO .)
    PUNTOYCOMA      reduce using rule 70 (expresion -> NULO .)


state 37

    (71) expresion -> SQRT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 87


state 38

    (72) expresion -> TAN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 88


state 39

    (73) expresion -> COS . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 89


state 40

    (74) expresion -> SIN . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 90


state 41

    (75) expresion -> LOG . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 91


state 42

    (76) expresion -> LOG10 . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 92


state 43

    (77) expresion -> PARSE . PARIZQ tipoDato COMA expresion PARDER

    PARIZQ          shift and go to state 93


state 44

    (78) expresion -> TRUNC . PARIZQ tipoDato COMA expresion PARDER

    PARIZQ          shift and go to state 94


state 45

    (79) expresion -> FLOAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 95


state 46

    (80) expresion -> STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 96


state 47

    (81) expresion -> TYPEOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 97


state 48

    (82) expresion -> PUSH . NOT PARIZQ expresion COMA expresion PARDER

    NOT             shift and go to state 98


state 49

    (83) expresion -> POP . NOT PARIZQ expresion PARDER

    NOT             shift and go to state 99


state 50

    (84) expresion -> LENGTH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 100


state 51

    (85) expresion -> UPPERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 101


state 52

    (86) expresion -> LOWERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 102


state 53

    (91) expresion -> CORIZQ . expresion DOSPUNTOS expresion CORDER
    (92) expresion -> CORIZQ . expresiones CORDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER
    (46) expresiones -> . expresiones COMA expresion
    (47) expresiones -> . expresion

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 103
    expresiones                    shift and go to state 104

state 54

    (2) instrucciones -> instrucciones instruccion .

    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MUTABLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NULO            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SQRT            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TAN             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    COS             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SIN             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOG             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOG10           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUNC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TYPEOF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PUSH            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    POP             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LENGTH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPPERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOWERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    COMA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 55

    (16) print_instr -> PRINTLN PARIZQ . expresiones PARDER PUNTOYCOMA
    (46) expresiones -> . expresiones COMA expresion
    (47) expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresiones                    shift and go to state 105
    expresion                      shift and go to state 106

state 56

    (17) print_instr -> PRINT PARIZQ . expresiones PARDER PUNTOYCOMA
    (46) expresiones -> . expresiones COMA expresion
    (47) expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresiones                    shift and go to state 107
    expresion                      shift and go to state 106

state 57

    (18) declaracion_instr -> LOCAL ID . IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> LOCAL ID . PUNTOYCOMA

    IGUAL           shift and go to state 108
    PUNTOYCOMA      shift and go to state 109


state 58

    (88) expresion -> ID . PARIZQ expresiones PARDER
    (89) expresion -> ID . expresion
    (90) expresion -> ID .
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for NULO resolved as shift
  ! shift/reduce conflict for SQRT resolved as shift
  ! shift/reduce conflict for TAN resolved as shift
  ! shift/reduce conflict for COS resolved as shift
  ! shift/reduce conflict for SIN resolved as shift
  ! shift/reduce conflict for LOG resolved as shift
  ! shift/reduce conflict for LOG10 resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for UPPERCASE resolved as shift
  ! shift/reduce conflict for LOWERCASE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
    PARIZQ          shift and go to state 110
    MAS             reduce using rule 90 (expresion -> ID .)
    POR             reduce using rule 90 (expresion -> ID .)
    DIV             reduce using rule 90 (expresion -> ID .)
    POTENCIA        reduce using rule 90 (expresion -> ID .)
    MODULO          reduce using rule 90 (expresion -> ID .)
    MAYOR           reduce using rule 90 (expresion -> ID .)
    MENOR           reduce using rule 90 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 90 (expresion -> ID .)
    MENORIGUAL      reduce using rule 90 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 90 (expresion -> ID .)
    DIFERENTE       reduce using rule 90 (expresion -> ID .)
    OR              reduce using rule 90 (expresion -> ID .)
    AND             reduce using rule 90 (expresion -> ID .)
    PUNTO           reduce using rule 90 (expresion -> ID .)
    IGUAL           reduce using rule 90 (expresion -> ID .)
    BREAK           reduce using rule 90 (expresion -> ID .)
    CONTINUE        reduce using rule 90 (expresion -> ID .)
    RETURN          reduce using rule 90 (expresion -> ID .)
    PRINTLN         reduce using rule 90 (expresion -> ID .)
    PRINT           reduce using rule 90 (expresion -> ID .)
    LOCAL           reduce using rule 90 (expresion -> ID .)
    GLOBAL          reduce using rule 90 (expresion -> ID .)
    STRUCT          reduce using rule 90 (expresion -> ID .)
    MUTABLE         reduce using rule 90 (expresion -> ID .)
    FUNCTION        reduce using rule 90 (expresion -> ID .)
    IF              reduce using rule 90 (expresion -> ID .)
    WHILE           reduce using rule 90 (expresion -> ID .)
    FOR             reduce using rule 90 (expresion -> ID .)
    DOSPUNTOS       reduce using rule 90 (expresion -> ID .)
    CORDER          reduce using rule 90 (expresion -> ID .)
    COMA            reduce using rule 90 (expresion -> ID .)
    PARDER          reduce using rule 90 (expresion -> ID .)
    DOSPUNTOSDOSPUNTOS reduce using rule 90 (expresion -> ID .)
    PUNTOYCOMA      reduce using rule 90 (expresion -> ID .)
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

  ! MENOS           [ reduce using rule 90 (expresion -> ID .) ]
  ! ID              [ reduce using rule 90 (expresion -> ID .) ]
  ! NOT             [ reduce using rule 90 (expresion -> ID .) ]
  ! DECIMAL         [ reduce using rule 90 (expresion -> ID .) ]
  ! ENTERO          [ reduce using rule 90 (expresion -> ID .) ]
  ! CARACTER        [ reduce using rule 90 (expresion -> ID .) ]
  ! CADENA          [ reduce using rule 90 (expresion -> ID .) ]
  ! TRUE            [ reduce using rule 90 (expresion -> ID .) ]
  ! FALSE           [ reduce using rule 90 (expresion -> ID .) ]
  ! NULO            [ reduce using rule 90 (expresion -> ID .) ]
  ! SQRT            [ reduce using rule 90 (expresion -> ID .) ]
  ! TAN             [ reduce using rule 90 (expresion -> ID .) ]
  ! COS             [ reduce using rule 90 (expresion -> ID .) ]
  ! SIN             [ reduce using rule 90 (expresion -> ID .) ]
  ! LOG             [ reduce using rule 90 (expresion -> ID .) ]
  ! LOG10           [ reduce using rule 90 (expresion -> ID .) ]
  ! PARSE           [ reduce using rule 90 (expresion -> ID .) ]
  ! TRUNC           [ reduce using rule 90 (expresion -> ID .) ]
  ! FLOAT           [ reduce using rule 90 (expresion -> ID .) ]
  ! STRING          [ reduce using rule 90 (expresion -> ID .) ]
  ! TYPEOF          [ reduce using rule 90 (expresion -> ID .) ]
  ! PUSH            [ reduce using rule 90 (expresion -> ID .) ]
  ! POP             [ reduce using rule 90 (expresion -> ID .) ]
  ! LENGTH          [ reduce using rule 90 (expresion -> ID .) ]
  ! UPPERCASE       [ reduce using rule 90 (expresion -> ID .) ]
  ! LOWERCASE       [ reduce using rule 90 (expresion -> ID .) ]
  ! CORIZQ          [ reduce using rule 90 (expresion -> ID .) ]

    expresion                      shift and go to state 60

state 59

    (29) declaracion_asignacion_instr -> ID IGUAL . expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 111

state 60

    (89) expresion -> ID expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           reduce using rule 89 (expresion -> ID expresion .)
    BREAK           reduce using rule 89 (expresion -> ID expresion .)
    CONTINUE        reduce using rule 89 (expresion -> ID expresion .)
    RETURN          reduce using rule 89 (expresion -> ID expresion .)
    PRINTLN         reduce using rule 89 (expresion -> ID expresion .)
    PRINT           reduce using rule 89 (expresion -> ID expresion .)
    LOCAL           reduce using rule 89 (expresion -> ID expresion .)
    GLOBAL          reduce using rule 89 (expresion -> ID expresion .)
    STRUCT          reduce using rule 89 (expresion -> ID expresion .)
    MUTABLE         reduce using rule 89 (expresion -> ID expresion .)
    ID              reduce using rule 89 (expresion -> ID expresion .)
    FUNCTION        reduce using rule 89 (expresion -> ID expresion .)
    IF              reduce using rule 89 (expresion -> ID expresion .)
    WHILE           reduce using rule 89 (expresion -> ID expresion .)
    FOR             reduce using rule 89 (expresion -> ID expresion .)
    NOT             reduce using rule 89 (expresion -> ID expresion .)
    DECIMAL         reduce using rule 89 (expresion -> ID expresion .)
    ENTERO          reduce using rule 89 (expresion -> ID expresion .)
    CARACTER        reduce using rule 89 (expresion -> ID expresion .)
    CADENA          reduce using rule 89 (expresion -> ID expresion .)
    TRUE            reduce using rule 89 (expresion -> ID expresion .)
    FALSE           reduce using rule 89 (expresion -> ID expresion .)
    NULO            reduce using rule 89 (expresion -> ID expresion .)
    SQRT            reduce using rule 89 (expresion -> ID expresion .)
    TAN             reduce using rule 89 (expresion -> ID expresion .)
    COS             reduce using rule 89 (expresion -> ID expresion .)
    SIN             reduce using rule 89 (expresion -> ID expresion .)
    LOG             reduce using rule 89 (expresion -> ID expresion .)
    LOG10           reduce using rule 89 (expresion -> ID expresion .)
    PARSE           reduce using rule 89 (expresion -> ID expresion .)
    TRUNC           reduce using rule 89 (expresion -> ID expresion .)
    FLOAT           reduce using rule 89 (expresion -> ID expresion .)
    STRING          reduce using rule 89 (expresion -> ID expresion .)
    TYPEOF          reduce using rule 89 (expresion -> ID expresion .)
    PUSH            reduce using rule 89 (expresion -> ID expresion .)
    POP             reduce using rule 89 (expresion -> ID expresion .)
    LENGTH          reduce using rule 89 (expresion -> ID expresion .)
    UPPERCASE       reduce using rule 89 (expresion -> ID expresion .)
    LOWERCASE       reduce using rule 89 (expresion -> ID expresion .)
    CORIZQ          reduce using rule 89 (expresion -> ID expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> ID expresion .)
    CORDER          reduce using rule 89 (expresion -> ID expresion .)
    COMA            reduce using rule 89 (expresion -> ID expresion .)
    PARDER          reduce using rule 89 (expresion -> ID expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 89 (expresion -> ID expresion .)
    PUNTOYCOMA      reduce using rule 89 (expresion -> ID expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77

  ! MAS             [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! DIV             [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! POTENCIA        [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MAYOR           [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MENOR           [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! DIFERENTE       [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! OR              [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! AND             [ reduce using rule 89 (expresion -> ID expresion .) ]
  ! PUNTO           [ reduce using rule 89 (expresion -> ID expresion .) ]


state 61

    (30) llamadaFuncion_instr -> ID PARIZQ . expresiones PARDER PUNTOYCOMA
    (88) expresion -> ID PARIZQ . expresiones PARDER
    (46) expresiones -> . expresiones COMA expresion
    (47) expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresiones                    shift and go to state 112
    expresion                      shift and go to state 106

state 62

    (28) asignacion_instr -> expresion IGUAL . expresion PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 113

state 63

    (48) expresion -> expresion MAS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 114

state 64

    (49) expresion -> expresion MENOS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 115

state 65

    (50) expresion -> expresion POR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 116

state 66

    (51) expresion -> expresion DIV . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 117

state 67

    (52) expresion -> expresion POTENCIA . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 118

state 68

    (53) expresion -> expresion MODULO . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 119

state 69

    (54) expresion -> expresion MAYOR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 120

state 70

    (55) expresion -> expresion MENOR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 121

state 71

    (56) expresion -> expresion MAYORIGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 122

state 72

    (57) expresion -> expresion MENORIGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 123

state 73

    (58) expresion -> expresion IGUALIGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 124

state 74

    (59) expresion -> expresion DIFERENTE . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 125

state 75

    (60) expresion -> expresion OR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 126

state 76

    (61) expresion -> expresion AND . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 127

state 77

    (87) expresion -> expresion PUNTO . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 128

state 78

    (19) declaracion_instr -> GLOBAL ID . IGUAL expresion PUNTOYCOMA
    (21) declaracion_instr -> GLOBAL ID . PUNTOYCOMA

    IGUAL           shift and go to state 129
    PUNTOYCOMA      shift and go to state 130


state 79

    (22) declaracion_instr -> STRUCT ID . struct_variables END PUNTOYCOMA
    (24) struct_variables -> . struct_variables struct_variable
    (25) struct_variables -> . struct_variable
    (26) struct_variable -> . ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (27) struct_variable -> . ID PUNTOYCOMA

    ID              shift and go to state 131

    struct_variables               shift and go to state 132
    struct_variable                shift and go to state 133

state 80

    (23) declaracion_instr -> MUTABLE STRUCT . ID struct_variables END PUNTOYCOMA

    ID              shift and go to state 134


state 81

    (31) funcion_instr -> FUNCTION ID . PARIZQ parametros PARDER instrucciones END PUNTOYCOMA

    PARIZQ          shift and go to state 135


state 82

    (36) if_instr -> IF expresion . instrucciones END PUNTOYCOMA
    (37) if_instr -> IF expresion . instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> IF expresion . instrucciones ELSE instrucciones END PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MAS             shift and go to state 63
    MENOS           shift and go to state 137
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instrucciones                  shift and go to state 136
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 83

    (42) while_instr -> WHILE expresion . instrucciones END PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MAS             shift and go to state 63
    MENOS           shift and go to state 137
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instrucciones                  shift and go to state 138
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 84

    (43) for_instr -> FOR ID . IN for_instr_opciones instrucciones END PUNTOYCOMA

    IN              shift and go to state 139


state 85

    (62) expresion -> MENOS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 62 (expresion -> MENOS expresion .)
    MAS             reduce using rule 62 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 62 (expresion -> MENOS expresion .)
    POR             reduce using rule 62 (expresion -> MENOS expresion .)
    DIV             reduce using rule 62 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 62 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 62 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 62 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 62 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 62 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 62 (expresion -> MENOS expresion .)
    OR              reduce using rule 62 (expresion -> MENOS expresion .)
    AND             reduce using rule 62 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 62 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 62 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 62 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 62 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 62 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 62 (expresion -> MENOS expresion .)
    LOCAL           reduce using rule 62 (expresion -> MENOS expresion .)
    GLOBAL          reduce using rule 62 (expresion -> MENOS expresion .)
    STRUCT          reduce using rule 62 (expresion -> MENOS expresion .)
    MUTABLE         reduce using rule 62 (expresion -> MENOS expresion .)
    ID              reduce using rule 62 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 62 (expresion -> MENOS expresion .)
    IF              reduce using rule 62 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 62 (expresion -> MENOS expresion .)
    FOR             reduce using rule 62 (expresion -> MENOS expresion .)
    NOT             reduce using rule 62 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 62 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 62 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 62 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 62 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 62 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 62 (expresion -> MENOS expresion .)
    NULO            reduce using rule 62 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 62 (expresion -> MENOS expresion .)
    TAN             reduce using rule 62 (expresion -> MENOS expresion .)
    COS             reduce using rule 62 (expresion -> MENOS expresion .)
    SIN             reduce using rule 62 (expresion -> MENOS expresion .)
    LOG             reduce using rule 62 (expresion -> MENOS expresion .)
    LOG10           reduce using rule 62 (expresion -> MENOS expresion .)
    PARSE           reduce using rule 62 (expresion -> MENOS expresion .)
    TRUNC           reduce using rule 62 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 62 (expresion -> MENOS expresion .)
    STRING          reduce using rule 62 (expresion -> MENOS expresion .)
    TYPEOF          reduce using rule 62 (expresion -> MENOS expresion .)
    PUSH            reduce using rule 62 (expresion -> MENOS expresion .)
    POP             reduce using rule 62 (expresion -> MENOS expresion .)
    LENGTH          reduce using rule 62 (expresion -> MENOS expresion .)
    UPPERCASE       reduce using rule 62 (expresion -> MENOS expresion .)
    LOWERCASE       reduce using rule 62 (expresion -> MENOS expresion .)
    CORIZQ          reduce using rule 62 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 62 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 62 (expresion -> MENOS expresion .)
    COMA            reduce using rule 62 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 62 (expresion -> MENOS expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 62 (expresion -> MENOS expresion .)
    PUNTOYCOMA      reduce using rule 62 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 86

    (63) expresion -> NOT expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 63 (expresion -> NOT expresion .)
    MAS             reduce using rule 63 (expresion -> NOT expresion .)
    MENOS           reduce using rule 63 (expresion -> NOT expresion .)
    POR             reduce using rule 63 (expresion -> NOT expresion .)
    DIV             reduce using rule 63 (expresion -> NOT expresion .)
    POTENCIA        reduce using rule 63 (expresion -> NOT expresion .)
    MODULO          reduce using rule 63 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 63 (expresion -> NOT expresion .)
    MENOR           reduce using rule 63 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 63 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 63 (expresion -> NOT expresion .)
    OR              reduce using rule 63 (expresion -> NOT expresion .)
    AND             reduce using rule 63 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 63 (expresion -> NOT expresion .)
    BREAK           reduce using rule 63 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 63 (expresion -> NOT expresion .)
    RETURN          reduce using rule 63 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 63 (expresion -> NOT expresion .)
    PRINT           reduce using rule 63 (expresion -> NOT expresion .)
    LOCAL           reduce using rule 63 (expresion -> NOT expresion .)
    GLOBAL          reduce using rule 63 (expresion -> NOT expresion .)
    STRUCT          reduce using rule 63 (expresion -> NOT expresion .)
    MUTABLE         reduce using rule 63 (expresion -> NOT expresion .)
    ID              reduce using rule 63 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 63 (expresion -> NOT expresion .)
    IF              reduce using rule 63 (expresion -> NOT expresion .)
    WHILE           reduce using rule 63 (expresion -> NOT expresion .)
    FOR             reduce using rule 63 (expresion -> NOT expresion .)
    NOT             reduce using rule 63 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 63 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 63 (expresion -> NOT expresion .)
    CARACTER        reduce using rule 63 (expresion -> NOT expresion .)
    CADENA          reduce using rule 63 (expresion -> NOT expresion .)
    TRUE            reduce using rule 63 (expresion -> NOT expresion .)
    FALSE           reduce using rule 63 (expresion -> NOT expresion .)
    NULO            reduce using rule 63 (expresion -> NOT expresion .)
    SQRT            reduce using rule 63 (expresion -> NOT expresion .)
    TAN             reduce using rule 63 (expresion -> NOT expresion .)
    COS             reduce using rule 63 (expresion -> NOT expresion .)
    SIN             reduce using rule 63 (expresion -> NOT expresion .)
    LOG             reduce using rule 63 (expresion -> NOT expresion .)
    LOG10           reduce using rule 63 (expresion -> NOT expresion .)
    PARSE           reduce using rule 63 (expresion -> NOT expresion .)
    TRUNC           reduce using rule 63 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 63 (expresion -> NOT expresion .)
    STRING          reduce using rule 63 (expresion -> NOT expresion .)
    TYPEOF          reduce using rule 63 (expresion -> NOT expresion .)
    PUSH            reduce using rule 63 (expresion -> NOT expresion .)
    POP             reduce using rule 63 (expresion -> NOT expresion .)
    LENGTH          reduce using rule 63 (expresion -> NOT expresion .)
    UPPERCASE       reduce using rule 63 (expresion -> NOT expresion .)
    LOWERCASE       reduce using rule 63 (expresion -> NOT expresion .)
    CORIZQ          reduce using rule 63 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 63 (expresion -> NOT expresion .)
    CORDER          reduce using rule 63 (expresion -> NOT expresion .)
    COMA            reduce using rule 63 (expresion -> NOT expresion .)
    PARDER          reduce using rule 63 (expresion -> NOT expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 63 (expresion -> NOT expresion .)
    PUNTOYCOMA      reduce using rule 63 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 87

    (71) expresion -> SQRT PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 140

state 88

    (72) expresion -> TAN PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 141

state 89

    (73) expresion -> COS PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 142

state 90

    (74) expresion -> SIN PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 143

state 91

    (75) expresion -> LOG PARIZQ . expresion COMA expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 144

state 92

    (76) expresion -> LOG10 PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 145

state 93

    (77) expresion -> PARSE PARIZQ . tipoDato COMA expresion PARDER
    (93) tipoDato -> . NULO
    (94) tipoDato -> . FLOAT64
    (95) tipoDato -> . INT64
    (96) tipoDato -> . BOOL
    (97) tipoDato -> . CHAR
    (98) tipoDato -> . STRING
    (99) tipoDato -> . ID

    NULO            shift and go to state 147
    FLOAT64         shift and go to state 148
    INT64           shift and go to state 149
    BOOL            shift and go to state 150
    CHAR            shift and go to state 151
    STRING          shift and go to state 152
    ID              shift and go to state 153

    tipoDato                       shift and go to state 146

state 94

    (78) expresion -> TRUNC PARIZQ . tipoDato COMA expresion PARDER
    (93) tipoDato -> . NULO
    (94) tipoDato -> . FLOAT64
    (95) tipoDato -> . INT64
    (96) tipoDato -> . BOOL
    (97) tipoDato -> . CHAR
    (98) tipoDato -> . STRING
    (99) tipoDato -> . ID

    NULO            shift and go to state 147
    FLOAT64         shift and go to state 148
    INT64           shift and go to state 149
    BOOL            shift and go to state 150
    CHAR            shift and go to state 151
    STRING          shift and go to state 152
    ID              shift and go to state 153

    tipoDato                       shift and go to state 154

state 95

    (79) expresion -> FLOAT PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 155

state 96

    (80) expresion -> STRING PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 156

state 97

    (81) expresion -> TYPEOF PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 157

state 98

    (82) expresion -> PUSH NOT . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 158


state 99

    (83) expresion -> POP NOT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 159


state 100

    (84) expresion -> LENGTH PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 160

state 101

    (85) expresion -> UPPERCASE PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 161

state 102

    (86) expresion -> LOWERCASE PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 162

state 103

    (91) expresion -> CORIZQ expresion . DOSPUNTOS expresion CORDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion
    (47) expresiones -> expresion .

    DOSPUNTOS       shift and go to state 163
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77
    CORDER          reduce using rule 47 (expresiones -> expresion .)
    COMA            reduce using rule 47 (expresiones -> expresion .)


state 104

    (92) expresion -> CORIZQ expresiones . CORDER
    (46) expresiones -> expresiones . COMA expresion

    CORDER          shift and go to state 164
    COMA            shift and go to state 165


state 105

    (16) print_instr -> PRINTLN PARIZQ expresiones . PARDER PUNTOYCOMA
    (46) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 166
    COMA            shift and go to state 165


state 106

    (47) expresiones -> expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          reduce using rule 47 (expresiones -> expresion .)
    COMA            reduce using rule 47 (expresiones -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 107

    (17) print_instr -> PRINT PARIZQ expresiones . PARDER PUNTOYCOMA
    (46) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 167
    COMA            shift and go to state 165


state 108

    (18) declaracion_instr -> LOCAL ID IGUAL . expresion PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 168

state 109

    (20) declaracion_instr -> LOCAL ID PUNTOYCOMA .

    BREAK           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    CONTINUE        reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    RETURN          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    PRINTLN         reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    PRINT           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    LOCAL           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    GLOBAL          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    STRUCT          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    MUTABLE         reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    ID              reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    FUNCTION        reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    IF              reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    WHILE           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    FOR             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    MENOS           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    NOT             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    DECIMAL         reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    ENTERO          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    CARACTER        reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    CADENA          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    TRUE            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    FALSE           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    NULO            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    SQRT            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    TAN             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    COS             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    SIN             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    LOG             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    LOG10           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    PARSE           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    TRUNC           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    FLOAT           reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    STRING          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    TYPEOF          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    PUSH            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    POP             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    LENGTH          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    UPPERCASE       reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    LOWERCASE       reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    CORIZQ          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    $end            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    END             reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    ELSE            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    ELSEIF          reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)
    COMA            reduce using rule 20 (declaracion_instr -> LOCAL ID PUNTOYCOMA .)


state 110

    (88) expresion -> ID PARIZQ . expresiones PARDER
    (46) expresiones -> . expresiones COMA expresion
    (47) expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresiones                    shift and go to state 169
    expresion                      shift and go to state 106

state 111

    (29) declaracion_asignacion_instr -> ID IGUAL expresion . DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    DOSPUNTOSDOSPUNTOS shift and go to state 170
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 112

    (30) llamadaFuncion_instr -> ID PARIZQ expresiones . PARDER PUNTOYCOMA
    (88) expresion -> ID PARIZQ expresiones . PARDER
    (46) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 171
    COMA            shift and go to state 165


state 113

    (28) asignacion_instr -> expresion IGUAL expresion . PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PUNTOYCOMA      shift and go to state 172
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 114

    (48) expresion -> expresion MAS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 48 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 48 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 48 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 48 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 48 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 48 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 48 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 48 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 48 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 48 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 48 (expresion -> expresion MAS expresion .)
    LOCAL           reduce using rule 48 (expresion -> expresion MAS expresion .)
    GLOBAL          reduce using rule 48 (expresion -> expresion MAS expresion .)
    STRUCT          reduce using rule 48 (expresion -> expresion MAS expresion .)
    MUTABLE         reduce using rule 48 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 48 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 48 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 48 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 48 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 48 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 48 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 48 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 48 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 48 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 48 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 48 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 48 (expresion -> expresion MAS expresion .)
    NULO            reduce using rule 48 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 48 (expresion -> expresion MAS expresion .)
    TAN             reduce using rule 48 (expresion -> expresion MAS expresion .)
    COS             reduce using rule 48 (expresion -> expresion MAS expresion .)
    SIN             reduce using rule 48 (expresion -> expresion MAS expresion .)
    LOG             reduce using rule 48 (expresion -> expresion MAS expresion .)
    LOG10           reduce using rule 48 (expresion -> expresion MAS expresion .)
    PARSE           reduce using rule 48 (expresion -> expresion MAS expresion .)
    TRUNC           reduce using rule 48 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 48 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 48 (expresion -> expresion MAS expresion .)
    TYPEOF          reduce using rule 48 (expresion -> expresion MAS expresion .)
    PUSH            reduce using rule 48 (expresion -> expresion MAS expresion .)
    POP             reduce using rule 48 (expresion -> expresion MAS expresion .)
    LENGTH          reduce using rule 48 (expresion -> expresion MAS expresion .)
    UPPERCASE       reduce using rule 48 (expresion -> expresion MAS expresion .)
    LOWERCASE       reduce using rule 48 (expresion -> expresion MAS expresion .)
    CORIZQ          reduce using rule 48 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 48 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 48 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 48 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion MAS expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 48 (expresion -> expresion MAS expresion .)
    PUNTOYCOMA      reduce using rule 48 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 115

    (49) expresion -> expresion MENOS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOCAL           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    GLOBAL          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    STRUCT          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MUTABLE         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NULO            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TAN             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    COS             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    SIN             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOG             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOG10           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PARSE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TRUNC           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TYPEOF          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUSH            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    POP             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LENGTH          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    UPPERCASE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOWERCASE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CORIZQ          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUNTOYCOMA      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 116

    (50) expresion -> expresion POR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 50 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 50 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 50 (expresion -> expresion POR expresion .)
    POR             reduce using rule 50 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 50 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 50 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 50 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 50 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 50 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 50 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 50 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 50 (expresion -> expresion POR expresion .)
    OR              reduce using rule 50 (expresion -> expresion POR expresion .)
    AND             reduce using rule 50 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 50 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 50 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 50 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 50 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 50 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 50 (expresion -> expresion POR expresion .)
    LOCAL           reduce using rule 50 (expresion -> expresion POR expresion .)
    GLOBAL          reduce using rule 50 (expresion -> expresion POR expresion .)
    STRUCT          reduce using rule 50 (expresion -> expresion POR expresion .)
    MUTABLE         reduce using rule 50 (expresion -> expresion POR expresion .)
    ID              reduce using rule 50 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 50 (expresion -> expresion POR expresion .)
    IF              reduce using rule 50 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 50 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 50 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 50 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 50 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 50 (expresion -> expresion POR expresion .)
    CARACTER        reduce using rule 50 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 50 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 50 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 50 (expresion -> expresion POR expresion .)
    NULO            reduce using rule 50 (expresion -> expresion POR expresion .)
    SQRT            reduce using rule 50 (expresion -> expresion POR expresion .)
    TAN             reduce using rule 50 (expresion -> expresion POR expresion .)
    COS             reduce using rule 50 (expresion -> expresion POR expresion .)
    SIN             reduce using rule 50 (expresion -> expresion POR expresion .)
    LOG             reduce using rule 50 (expresion -> expresion POR expresion .)
    LOG10           reduce using rule 50 (expresion -> expresion POR expresion .)
    PARSE           reduce using rule 50 (expresion -> expresion POR expresion .)
    TRUNC           reduce using rule 50 (expresion -> expresion POR expresion .)
    FLOAT           reduce using rule 50 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 50 (expresion -> expresion POR expresion .)
    TYPEOF          reduce using rule 50 (expresion -> expresion POR expresion .)
    PUSH            reduce using rule 50 (expresion -> expresion POR expresion .)
    POP             reduce using rule 50 (expresion -> expresion POR expresion .)
    LENGTH          reduce using rule 50 (expresion -> expresion POR expresion .)
    UPPERCASE       reduce using rule 50 (expresion -> expresion POR expresion .)
    LOWERCASE       reduce using rule 50 (expresion -> expresion POR expresion .)
    CORIZQ          reduce using rule 50 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 50 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 50 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 50 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 50 (expresion -> expresion POR expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 50 (expresion -> expresion POR expresion .)
    PUNTOYCOMA      reduce using rule 50 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 50 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 117

    (51) expresion -> expresion DIV expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MAS             reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 51 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 51 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 51 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 51 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion DIV expresion .)
    IGUALIGUAL      reduce using rule 51 (expresion -> expresion DIV expresion .)
    DIFERENTE       reduce using rule 51 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 51 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 51 (expresion -> expresion DIV expresion .)
    PUNTO           reduce using rule 51 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 51 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 51 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 51 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 51 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 51 (expresion -> expresion DIV expresion .)
    LOCAL           reduce using rule 51 (expresion -> expresion DIV expresion .)
    GLOBAL          reduce using rule 51 (expresion -> expresion DIV expresion .)
    STRUCT          reduce using rule 51 (expresion -> expresion DIV expresion .)
    MUTABLE         reduce using rule 51 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 51 (expresion -> expresion DIV expresion .)
    FUNCTION        reduce using rule 51 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 51 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 51 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 51 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 51 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 51 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 51 (expresion -> expresion DIV expresion .)
    CARACTER        reduce using rule 51 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 51 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 51 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 51 (expresion -> expresion DIV expresion .)
    NULO            reduce using rule 51 (expresion -> expresion DIV expresion .)
    SQRT            reduce using rule 51 (expresion -> expresion DIV expresion .)
    TAN             reduce using rule 51 (expresion -> expresion DIV expresion .)
    COS             reduce using rule 51 (expresion -> expresion DIV expresion .)
    SIN             reduce using rule 51 (expresion -> expresion DIV expresion .)
    LOG             reduce using rule 51 (expresion -> expresion DIV expresion .)
    LOG10           reduce using rule 51 (expresion -> expresion DIV expresion .)
    PARSE           reduce using rule 51 (expresion -> expresion DIV expresion .)
    TRUNC           reduce using rule 51 (expresion -> expresion DIV expresion .)
    FLOAT           reduce using rule 51 (expresion -> expresion DIV expresion .)
    STRING          reduce using rule 51 (expresion -> expresion DIV expresion .)
    TYPEOF          reduce using rule 51 (expresion -> expresion DIV expresion .)
    PUSH            reduce using rule 51 (expresion -> expresion DIV expresion .)
    POP             reduce using rule 51 (expresion -> expresion DIV expresion .)
    LENGTH          reduce using rule 51 (expresion -> expresion DIV expresion .)
    UPPERCASE       reduce using rule 51 (expresion -> expresion DIV expresion .)
    LOWERCASE       reduce using rule 51 (expresion -> expresion DIV expresion .)
    CORIZQ          reduce using rule 51 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 51 (expresion -> expresion DIV expresion .)
    CORDER          reduce using rule 51 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 51 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 51 (expresion -> expresion DIV expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 51 (expresion -> expresion DIV expresion .)
    PUNTOYCOMA      reduce using rule 51 (expresion -> expresion DIV expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 51 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 118

    (52) expresion -> expresion POTENCIA expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MAS             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    DIV             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    IGUALIGUAL      reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    DIFERENTE       reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PRINTLN         reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PRINT           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    LOCAL           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    GLOBAL          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    STRUCT          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    MUTABLE         reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    FUNCTION        reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    NOT             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    DECIMAL         reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    ENTERO          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    CARACTER        reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    CADENA          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    TRUE            reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    FALSE           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    NULO            reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    SQRT            reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    TAN             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    COS             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    SIN             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    LOG             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    LOG10           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PARSE           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    TRUNC           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    FLOAT           reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    STRING          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    TYPEOF          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PUSH            reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    POP             reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    LENGTH          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    UPPERCASE       reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    LOWERCASE       reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    CORIZQ          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    PUNTOYCOMA      reduce using rule 52 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 52 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 119

    (53) expresion -> expresion MODULO expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 53 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 53 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 53 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 53 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    LOCAL           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    GLOBAL          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    STRUCT          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    MUTABLE         reduce using rule 53 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 53 (expresion -> expresion MODULO expresion .)
    FUNCTION        reduce using rule 53 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 53 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 53 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 53 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 53 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    NULO            reduce using rule 53 (expresion -> expresion MODULO expresion .)
    SQRT            reduce using rule 53 (expresion -> expresion MODULO expresion .)
    TAN             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    COS             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    SIN             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    LOG             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    LOG10           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PARSE           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    TRUNC           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    FLOAT           reduce using rule 53 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    TYPEOF          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PUSH            reduce using rule 53 (expresion -> expresion MODULO expresion .)
    POP             reduce using rule 53 (expresion -> expresion MODULO expresion .)
    LENGTH          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    UPPERCASE       reduce using rule 53 (expresion -> expresion MODULO expresion .)
    LOWERCASE       reduce using rule 53 (expresion -> expresion MODULO expresion .)
    CORIZQ          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 53 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 53 (expresion -> expresion MODULO expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 53 (expresion -> expresion MODULO expresion .)
    PUNTOYCOMA      reduce using rule 53 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 53 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 120

    (54) expresion -> expresion MAYOR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    IGUALIGUAL      reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PRINT           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    LOCAL           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    GLOBAL          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    STRUCT          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MUTABLE         reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    FUNCTION        reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    CARACTER        reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    NULO            reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    SQRT            reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    TAN             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    COS             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    SIN             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    LOG             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    LOG10           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PARSE           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    TRUNC           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    FLOAT           reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    STRING          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    TYPEOF          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PUSH            reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    POP             reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    LENGTH          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    UPPERCASE       reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    LOWERCASE       reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    CORIZQ          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOS       reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    PUNTOYCOMA      reduce using rule 54 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 121

    (55) expresion -> expresion MENOR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 55 (expresion -> expresion MENOR expresion .)
    IGUALIGUAL      reduce using rule 55 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 55 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 55 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 55 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PRINT           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    LOCAL           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    GLOBAL          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    STRUCT          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MUTABLE         reduce using rule 55 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 55 (expresion -> expresion MENOR expresion .)
    FUNCTION        reduce using rule 55 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 55 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 55 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CARACTER        reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    NULO            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    SQRT            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    TAN             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    COS             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    SIN             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    LOG             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    LOG10           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PARSE           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    TRUNC           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    FLOAT           reduce using rule 55 (expresion -> expresion MENOR expresion .)
    STRING          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    TYPEOF          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PUSH            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    POP             reduce using rule 55 (expresion -> expresion MENOR expresion .)
    LENGTH          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    UPPERCASE       reduce using rule 55 (expresion -> expresion MENOR expresion .)
    LOWERCASE       reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CORIZQ          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    DOSPUNTOS       reduce using rule 55 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 55 (expresion -> expresion MENOR expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 55 (expresion -> expresion MENOR expresion .)
    PUNTOYCOMA      reduce using rule 55 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 122

    (56) expresion -> expresion MAYORIGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PRINTLN         reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    LOCAL           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    GLOBAL          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    STRUCT          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MUTABLE         reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    FUNCTION        reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    NOT             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    CARACTER        reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    CADENA          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    TRUE            reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    FALSE           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    NULO            reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    SQRT            reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    TAN             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    COS             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    SIN             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    LOG             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    LOG10           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PARSE           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    TRUNC           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    FLOAT           reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    STRING          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    TYPEOF          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PUSH            reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    POP             reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    LENGTH          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    UPPERCASE       reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    LOWERCASE       reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    CORIZQ          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOYCOMA      reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 123

    (57) expresion -> expresion MENORIGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MAYOR           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PRINTLN         reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    LOCAL           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    GLOBAL          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    STRUCT          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MUTABLE         reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    FUNCTION        reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    NOT             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    CARACTER        reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    CADENA          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    TRUE            reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    FALSE           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    NULO            reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    SQRT            reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    TAN             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    COS             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    SIN             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    LOG             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    LOG10           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PARSE           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    TRUNC           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    FLOAT           reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    STRING          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    TYPEOF          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PUSH            reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    POP             reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    LENGTH          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    UPPERCASE       reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    LOWERCASE       reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    CORIZQ          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOYCOMA      reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 124

    (58) expresion -> expresion IGUALIGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MAYOR           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MENOR           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MENORIGUAL      reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTO           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    BREAK           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    CONTINUE        reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    RETURN          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PRINTLN         reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PRINT           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    LOCAL           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    GLOBAL          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    STRUCT          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MUTABLE         reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    ID              reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    FUNCTION        reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    IF              reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    WHILE           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    FOR             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    NOT             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    CARACTER        reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    CADENA          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    TRUE            reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    FALSE           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    NULO            reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    SQRT            reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    TAN             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    COS             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    SIN             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    LOG             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    LOG10           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PARSE           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    TRUNC           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    FLOAT           reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    STRING          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    TYPEOF          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PUSH            reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    POP             reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    LENGTH          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    UPPERCASE       reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    LOWERCASE       reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    CORIZQ          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    DOSPUNTOS       reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PARDER          reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTOYCOMA      reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POR             [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIV             [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 58 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 125

    (59) expresion -> expresion DIFERENTE expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MAYORIGUAL      reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MENORIGUAL      reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    IGUALIGUAL      reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PUNTO           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    BREAK           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CONTINUE        reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    RETURN          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PRINTLN         reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PRINT           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    LOCAL           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    GLOBAL          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    STRUCT          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MUTABLE         reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    ID              reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    FUNCTION        reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    IF              reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    WHILE           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    FOR             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    NOT             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    DECIMAL         reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    ENTERO          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CARACTER        reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CADENA          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    TRUE            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    FALSE           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    NULO            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    SQRT            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    TAN             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    COS             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    SIN             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    LOG             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    LOG10           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PARSE           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    TRUNC           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    FLOAT           reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    STRING          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    TYPEOF          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PUSH            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    POP             reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    LENGTH          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    UPPERCASE       reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    LOWERCASE       reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CORIZQ          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    DOSPUNTOS       reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PARDER          reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    PUNTOYCOMA      reduce using rule 59 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIV             [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 59 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 126

    (60) expresion -> expresion OR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 60 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 60 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 60 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 60 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 60 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 60 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 60 (expresion -> expresion OR expresion .)
    LOCAL           reduce using rule 60 (expresion -> expresion OR expresion .)
    GLOBAL          reduce using rule 60 (expresion -> expresion OR expresion .)
    STRUCT          reduce using rule 60 (expresion -> expresion OR expresion .)
    MUTABLE         reduce using rule 60 (expresion -> expresion OR expresion .)
    ID              reduce using rule 60 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 60 (expresion -> expresion OR expresion .)
    IF              reduce using rule 60 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 60 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 60 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 60 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 60 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 60 (expresion -> expresion OR expresion .)
    CARACTER        reduce using rule 60 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 60 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 60 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 60 (expresion -> expresion OR expresion .)
    NULO            reduce using rule 60 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 60 (expresion -> expresion OR expresion .)
    TAN             reduce using rule 60 (expresion -> expresion OR expresion .)
    COS             reduce using rule 60 (expresion -> expresion OR expresion .)
    SIN             reduce using rule 60 (expresion -> expresion OR expresion .)
    LOG             reduce using rule 60 (expresion -> expresion OR expresion .)
    LOG10           reduce using rule 60 (expresion -> expresion OR expresion .)
    PARSE           reduce using rule 60 (expresion -> expresion OR expresion .)
    TRUNC           reduce using rule 60 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 60 (expresion -> expresion OR expresion .)
    STRING          reduce using rule 60 (expresion -> expresion OR expresion .)
    TYPEOF          reduce using rule 60 (expresion -> expresion OR expresion .)
    PUSH            reduce using rule 60 (expresion -> expresion OR expresion .)
    POP             reduce using rule 60 (expresion -> expresion OR expresion .)
    LENGTH          reduce using rule 60 (expresion -> expresion OR expresion .)
    UPPERCASE       reduce using rule 60 (expresion -> expresion OR expresion .)
    LOWERCASE       reduce using rule 60 (expresion -> expresion OR expresion .)
    CORIZQ          reduce using rule 60 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 60 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 60 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 60 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 60 (expresion -> expresion OR expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 60 (expresion -> expresion OR expresion .)
    PUNTOYCOMA      reduce using rule 60 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! MAS             [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! OR              [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 60 (expresion -> expresion OR expresion .) ]
  ! PUNTO           [ shift and go to state 77 ]


state 127

    (61) expresion -> expresion AND expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    IGUAL           reduce using rule 61 (expresion -> expresion AND expresion .)
    OR              reduce using rule 61 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 61 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 61 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 61 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 61 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 61 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 61 (expresion -> expresion AND expresion .)
    LOCAL           reduce using rule 61 (expresion -> expresion AND expresion .)
    GLOBAL          reduce using rule 61 (expresion -> expresion AND expresion .)
    STRUCT          reduce using rule 61 (expresion -> expresion AND expresion .)
    MUTABLE         reduce using rule 61 (expresion -> expresion AND expresion .)
    ID              reduce using rule 61 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 61 (expresion -> expresion AND expresion .)
    IF              reduce using rule 61 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 61 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 61 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 61 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 61 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 61 (expresion -> expresion AND expresion .)
    CARACTER        reduce using rule 61 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 61 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 61 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 61 (expresion -> expresion AND expresion .)
    NULO            reduce using rule 61 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 61 (expresion -> expresion AND expresion .)
    TAN             reduce using rule 61 (expresion -> expresion AND expresion .)
    COS             reduce using rule 61 (expresion -> expresion AND expresion .)
    SIN             reduce using rule 61 (expresion -> expresion AND expresion .)
    LOG             reduce using rule 61 (expresion -> expresion AND expresion .)
    LOG10           reduce using rule 61 (expresion -> expresion AND expresion .)
    PARSE           reduce using rule 61 (expresion -> expresion AND expresion .)
    TRUNC           reduce using rule 61 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 61 (expresion -> expresion AND expresion .)
    STRING          reduce using rule 61 (expresion -> expresion AND expresion .)
    TYPEOF          reduce using rule 61 (expresion -> expresion AND expresion .)
    PUSH            reduce using rule 61 (expresion -> expresion AND expresion .)
    POP             reduce using rule 61 (expresion -> expresion AND expresion .)
    LENGTH          reduce using rule 61 (expresion -> expresion AND expresion .)
    UPPERCASE       reduce using rule 61 (expresion -> expresion AND expresion .)
    LOWERCASE       reduce using rule 61 (expresion -> expresion AND expresion .)
    CORIZQ          reduce using rule 61 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 61 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 61 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 61 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 61 (expresion -> expresion AND expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 61 (expresion -> expresion AND expresion .)
    PUNTOYCOMA      reduce using rule 61 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             shift and go to state 76

  ! MAS             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! AND             [ reduce using rule 61 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 75 ]
  ! PUNTO           [ shift and go to state 77 ]


state 128

    (87) expresion -> expresion PUNTO expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PRINTLN         reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    LOCAL           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    GLOBAL          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    STRUCT          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    MUTABLE         reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    ID              reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    FUNCTION        reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    IF              reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    FOR             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    NOT             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    DECIMAL         reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    ENTERO          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    CARACTER        reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    CADENA          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    TRUE            reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    FALSE           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    NULO            reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    SQRT            reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    TAN             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    COS             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    SIN             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    LOG             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    LOG10           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PARSE           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    TRUNC           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    FLOAT           reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    STRING          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    TYPEOF          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PUSH            reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    POP             reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    LENGTH          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    UPPERCASE       reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    LOWERCASE       reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    CORIZQ          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    COMA            reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    DOSPUNTOSDOSPUNTOS reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    PUNTOYCOMA      reduce using rule 87 (expresion -> expresion PUNTO expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77

  ! MAS             [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! POTENCIA        [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MAYOR           [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MENOR           [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! DIFERENTE       [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! OR              [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! AND             [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]
  ! PUNTO           [ reduce using rule 87 (expresion -> expresion PUNTO expresion .) ]


state 129

    (19) declaracion_instr -> GLOBAL ID IGUAL . expresion PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 173

state 130

    (21) declaracion_instr -> GLOBAL ID PUNTOYCOMA .

    BREAK           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    CONTINUE        reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    RETURN          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    PRINTLN         reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    PRINT           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    LOCAL           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    GLOBAL          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    STRUCT          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    MUTABLE         reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    ID              reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    FUNCTION        reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    IF              reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    WHILE           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    FOR             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    MENOS           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    NOT             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    DECIMAL         reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    ENTERO          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    CARACTER        reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    CADENA          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    TRUE            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    FALSE           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    NULO            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    SQRT            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    TAN             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    COS             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    SIN             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    LOG             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    LOG10           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    PARSE           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    TRUNC           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    FLOAT           reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    STRING          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    TYPEOF          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    PUSH            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    POP             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    LENGTH          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    UPPERCASE       reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    LOWERCASE       reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    CORIZQ          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    $end            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    END             reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    ELSE            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    ELSEIF          reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)
    COMA            reduce using rule 21 (declaracion_instr -> GLOBAL ID PUNTOYCOMA .)


state 131

    (26) struct_variable -> ID . DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (27) struct_variable -> ID . PUNTOYCOMA

    DOSPUNTOSDOSPUNTOS shift and go to state 174
    PUNTOYCOMA      shift and go to state 175


state 132

    (22) declaracion_instr -> STRUCT ID struct_variables . END PUNTOYCOMA
    (24) struct_variables -> struct_variables . struct_variable
    (26) struct_variable -> . ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (27) struct_variable -> . ID PUNTOYCOMA

    END             shift and go to state 176
    ID              shift and go to state 131

    struct_variable                shift and go to state 177

state 133

    (25) struct_variables -> struct_variable .

    END             reduce using rule 25 (struct_variables -> struct_variable .)
    ID              reduce using rule 25 (struct_variables -> struct_variable .)


state 134

    (23) declaracion_instr -> MUTABLE STRUCT ID . struct_variables END PUNTOYCOMA
    (24) struct_variables -> . struct_variables struct_variable
    (25) struct_variables -> . struct_variable
    (26) struct_variable -> . ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (27) struct_variable -> . ID PUNTOYCOMA

    ID              shift and go to state 131

    struct_variables               shift and go to state 178
    struct_variable                shift and go to state 133

state 135

    (31) funcion_instr -> FUNCTION ID PARIZQ . parametros PARDER instrucciones END PUNTOYCOMA
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . ID DOSPUNTOSDOSPUNTOS tipoDato
    (35) parametro -> . ID

    ID              shift and go to state 179

    parametros                     shift and go to state 180
    parametro                      shift and go to state 181

state 136

    (36) if_instr -> IF expresion instrucciones . END PUNTOYCOMA
    (37) if_instr -> IF expresion instrucciones . elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> IF expresion instrucciones . ELSE instrucciones END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (39) elseifs -> . elseifs COMA elseif_instr
    (40) elseifs -> . elseif_instr
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (41) elseif_instr -> . ELSEIF expresion instrucciones
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 182
    ELSE            shift and go to state 184
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    ELSEIF          shift and go to state 186
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    elseifs                        shift and go to state 183
    instruccion                    shift and go to state 54
    elseif_instr                   shift and go to state 185
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 137

    (49) expresion -> expresion MENOS . expresion
    (62) expresion -> MENOS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 187

state 138

    (42) while_instr -> WHILE expresion instrucciones . END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 188
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 139

    (43) for_instr -> FOR ID IN . for_instr_opciones instrucciones END PUNTOYCOMA
    (44) for_instr_opciones -> . ENTERO DOSPUNTOS ENTERO
    (45) for_instr_opciones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    ENTERO          shift and go to state 190
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    for_instr_opciones             shift and go to state 189
    expresion                      shift and go to state 191

state 140

    (71) expresion -> SQRT PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 192
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 141

    (72) expresion -> TAN PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 193
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 142

    (73) expresion -> COS PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 194
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 143

    (74) expresion -> SIN PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 195
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 144

    (75) expresion -> LOG PARIZQ expresion . COMA expresion PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    COMA            shift and go to state 196
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 145

    (76) expresion -> LOG10 PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 197
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 146

    (77) expresion -> PARSE PARIZQ tipoDato . COMA expresion PARDER

    COMA            shift and go to state 198


state 147

    (93) tipoDato -> NULO .

    COMA            reduce using rule 93 (tipoDato -> NULO .)
    PUNTOYCOMA      reduce using rule 93 (tipoDato -> NULO .)
    PARDER          reduce using rule 93 (tipoDato -> NULO .)


state 148

    (94) tipoDato -> FLOAT64 .

    COMA            reduce using rule 94 (tipoDato -> FLOAT64 .)
    PUNTOYCOMA      reduce using rule 94 (tipoDato -> FLOAT64 .)
    PARDER          reduce using rule 94 (tipoDato -> FLOAT64 .)


state 149

    (95) tipoDato -> INT64 .

    COMA            reduce using rule 95 (tipoDato -> INT64 .)
    PUNTOYCOMA      reduce using rule 95 (tipoDato -> INT64 .)
    PARDER          reduce using rule 95 (tipoDato -> INT64 .)


state 150

    (96) tipoDato -> BOOL .

    COMA            reduce using rule 96 (tipoDato -> BOOL .)
    PUNTOYCOMA      reduce using rule 96 (tipoDato -> BOOL .)
    PARDER          reduce using rule 96 (tipoDato -> BOOL .)


state 151

    (97) tipoDato -> CHAR .

    COMA            reduce using rule 97 (tipoDato -> CHAR .)
    PUNTOYCOMA      reduce using rule 97 (tipoDato -> CHAR .)
    PARDER          reduce using rule 97 (tipoDato -> CHAR .)


state 152

    (98) tipoDato -> STRING .

    COMA            reduce using rule 98 (tipoDato -> STRING .)
    PUNTOYCOMA      reduce using rule 98 (tipoDato -> STRING .)
    PARDER          reduce using rule 98 (tipoDato -> STRING .)


state 153

    (99) tipoDato -> ID .

    COMA            reduce using rule 99 (tipoDato -> ID .)
    PUNTOYCOMA      reduce using rule 99 (tipoDato -> ID .)
    PARDER          reduce using rule 99 (tipoDato -> ID .)


state 154

    (78) expresion -> TRUNC PARIZQ tipoDato . COMA expresion PARDER

    COMA            shift and go to state 199


state 155

    (79) expresion -> FLOAT PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 200
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 156

    (80) expresion -> STRING PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 201
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 157

    (81) expresion -> TYPEOF PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 202
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 158

    (82) expresion -> PUSH NOT PARIZQ . expresion COMA expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 203

state 159

    (83) expresion -> POP NOT PARIZQ . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 204

state 160

    (84) expresion -> LENGTH PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 205
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 161

    (85) expresion -> UPPERCASE PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 206
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 162

    (86) expresion -> LOWERCASE PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 207
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 163

    (91) expresion -> CORIZQ expresion DOSPUNTOS . expresion CORDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 208

state 164

    (92) expresion -> CORIZQ expresiones CORDER .

    IGUAL           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MAS             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MENOS           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    POR             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    DIV             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    POTENCIA        reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MODULO          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MAYOR           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MENOR           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MAYORIGUAL      reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MENORIGUAL      reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    IGUALIGUAL      reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    DIFERENTE       reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    OR              reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    AND             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PUNTO           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    BREAK           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    CONTINUE        reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    RETURN          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PRINTLN         reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PRINT           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    LOCAL           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    GLOBAL          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    STRUCT          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    MUTABLE         reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    ID              reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    FUNCTION        reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    IF              reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    WHILE           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    FOR             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    NOT             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    DECIMAL         reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    ENTERO          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    CARACTER        reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    CADENA          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    TRUE            reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    FALSE           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    NULO            reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    SQRT            reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    TAN             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    COS             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    SIN             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    LOG             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    LOG10           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PARSE           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    TRUNC           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    FLOAT           reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    STRING          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    TYPEOF          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PUSH            reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    POP             reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    LENGTH          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    UPPERCASE       reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    LOWERCASE       reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    CORIZQ          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    DOSPUNTOS       reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    CORDER          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    COMA            reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PARDER          reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)
    PUNTOYCOMA      reduce using rule 92 (expresion -> CORIZQ expresiones CORDER .)


state 165

    (46) expresiones -> expresiones COMA . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 209

state 166

    (16) print_instr -> PRINTLN PARIZQ expresiones PARDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 210


state 167

    (17) print_instr -> PRINT PARIZQ expresiones PARDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 211


state 168

    (18) declaracion_instr -> LOCAL ID IGUAL expresion . PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PUNTOYCOMA      shift and go to state 212
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 169

    (88) expresion -> ID PARIZQ expresiones . PARDER
    (46) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 213
    COMA            shift and go to state 165


state 170

    (29) declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS . tipoDato PUNTOYCOMA
    (93) tipoDato -> . NULO
    (94) tipoDato -> . FLOAT64
    (95) tipoDato -> . INT64
    (96) tipoDato -> . BOOL
    (97) tipoDato -> . CHAR
    (98) tipoDato -> . STRING
    (99) tipoDato -> . ID

    NULO            shift and go to state 147
    FLOAT64         shift and go to state 148
    INT64           shift and go to state 149
    BOOL            shift and go to state 150
    CHAR            shift and go to state 151
    STRING          shift and go to state 152
    ID              shift and go to state 153

    tipoDato                       shift and go to state 214

state 171

    (30) llamadaFuncion_instr -> ID PARIZQ expresiones PARDER . PUNTOYCOMA
    (88) expresion -> ID PARIZQ expresiones PARDER .

    PUNTOYCOMA      shift and go to state 215
    IGUAL           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MAS             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    POR             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DIV             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    POTENCIA        reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MODULO          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MAYOR           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENOR           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MAYORIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENORIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    IGUALIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DIFERENTE       reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    OR              reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    AND             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PUNTO           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)


state 172

    (28) asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .

    BREAK           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    CONTINUE        reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    RETURN          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    PRINTLN         reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    PRINT           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    LOCAL           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    GLOBAL          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    STRUCT          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    MUTABLE         reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    FUNCTION        reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    WHILE           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    FOR             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    MENOS           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    NOT             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    DECIMAL         reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    ENTERO          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    CARACTER        reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    CADENA          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    TRUE            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    FALSE           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    NULO            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    SQRT            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    TAN             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    COS             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    SIN             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    LOG             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    LOG10           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    PARSE           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    TRUNC           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    FLOAT           reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    STRING          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    TYPEOF          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    PUSH            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    POP             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    LENGTH          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    UPPERCASE       reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    LOWERCASE       reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    CORIZQ          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    $end            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    END             reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)
    COMA            reduce using rule 28 (asignacion_instr -> expresion IGUAL expresion PUNTOYCOMA .)


state 173

    (19) declaracion_instr -> GLOBAL ID IGUAL expresion . PUNTOYCOMA
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PUNTOYCOMA      shift and go to state 216
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 174

    (26) struct_variable -> ID DOSPUNTOSDOSPUNTOS . tipoDato PUNTOYCOMA
    (93) tipoDato -> . NULO
    (94) tipoDato -> . FLOAT64
    (95) tipoDato -> . INT64
    (96) tipoDato -> . BOOL
    (97) tipoDato -> . CHAR
    (98) tipoDato -> . STRING
    (99) tipoDato -> . ID

    NULO            shift and go to state 147
    FLOAT64         shift and go to state 148
    INT64           shift and go to state 149
    BOOL            shift and go to state 150
    CHAR            shift and go to state 151
    STRING          shift and go to state 152
    ID              shift and go to state 153

    tipoDato                       shift and go to state 217

state 175

    (27) struct_variable -> ID PUNTOYCOMA .

    END             reduce using rule 27 (struct_variable -> ID PUNTOYCOMA .)
    ID              reduce using rule 27 (struct_variable -> ID PUNTOYCOMA .)


state 176

    (22) declaracion_instr -> STRUCT ID struct_variables END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 218


state 177

    (24) struct_variables -> struct_variables struct_variable .

    END             reduce using rule 24 (struct_variables -> struct_variables struct_variable .)
    ID              reduce using rule 24 (struct_variables -> struct_variables struct_variable .)


state 178

    (23) declaracion_instr -> MUTABLE STRUCT ID struct_variables . END PUNTOYCOMA
    (24) struct_variables -> struct_variables . struct_variable
    (26) struct_variable -> . ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (27) struct_variable -> . ID PUNTOYCOMA

    END             shift and go to state 219
    ID              shift and go to state 131

    struct_variable                shift and go to state 177

state 179

    (34) parametro -> ID . DOSPUNTOSDOSPUNTOS tipoDato
    (35) parametro -> ID .

    DOSPUNTOSDOSPUNTOS shift and go to state 220
    PARDER          reduce using rule 35 (parametro -> ID .)
    COMA            reduce using rule 35 (parametro -> ID .)


state 180

    (31) funcion_instr -> FUNCTION ID PARIZQ parametros . PARDER instrucciones END PUNTOYCOMA
    (32) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 221
    COMA            shift and go to state 222


state 181

    (33) parametros -> parametro .

    PARDER          reduce using rule 33 (parametros -> parametro .)
    COMA            reduce using rule 33 (parametros -> parametro .)


state 182

    (36) if_instr -> IF expresion instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 223


state 183

    (37) if_instr -> IF expresion instrucciones elseifs . ELSE instrucciones END PUNTOYCOMA
    (39) elseifs -> elseifs . COMA elseif_instr

    ELSE            shift and go to state 224
    COMA            shift and go to state 225


state 184

    (38) if_instr -> IF expresion instrucciones ELSE . instrucciones END PUNTOYCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instrucciones                  shift and go to state 226
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 185

    (40) elseifs -> elseif_instr .

    ELSE            reduce using rule 40 (elseifs -> elseif_instr .)
    COMA            reduce using rule 40 (elseifs -> elseif_instr .)


state 186

    (41) elseif_instr -> ELSEIF . expresion instrucciones
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 227

state 187

    (49) expresion -> expresion MENOS expresion .
    (62) expresion -> MENOS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

  ! reduce/reduce conflict for MAS resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POR resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIV resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MODULO resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for OR resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 49 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PUNTO resolved using rule 49 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOCAL           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    GLOBAL          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    STRUCT          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MUTABLE         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NULO            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TAN             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    COS             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    SIN             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOG             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOG10           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PARSE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TRUNC           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TYPEOF          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUSH            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    POP             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LENGTH          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    UPPERCASE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LOWERCASE       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CORIZQ          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 62 (expresion -> MENOS expresion .)
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! POR             [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MAYOR           [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MENOR           [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! DIFERENTE       [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! OR              [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! AND             [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 62 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 188

    (42) while_instr -> WHILE expresion instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 228


state 189

    (43) for_instr -> FOR ID IN for_instr_opciones . instrucciones END PUNTOYCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    instrucciones                  shift and go to state 229
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 190

    (44) for_instr_opciones -> ENTERO . DOSPUNTOS ENTERO
    (65) expresion -> ENTERO .

    DOSPUNTOS       shift and go to state 230
    MAS             reduce using rule 65 (expresion -> ENTERO .)
    MENOS           reduce using rule 65 (expresion -> ENTERO .)
    POR             reduce using rule 65 (expresion -> ENTERO .)
    DIV             reduce using rule 65 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 65 (expresion -> ENTERO .)
    MODULO          reduce using rule 65 (expresion -> ENTERO .)
    MAYOR           reduce using rule 65 (expresion -> ENTERO .)
    MENOR           reduce using rule 65 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 65 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 65 (expresion -> ENTERO .)
    OR              reduce using rule 65 (expresion -> ENTERO .)
    AND             reduce using rule 65 (expresion -> ENTERO .)
    PUNTO           reduce using rule 65 (expresion -> ENTERO .)
    BREAK           reduce using rule 65 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 65 (expresion -> ENTERO .)
    RETURN          reduce using rule 65 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 65 (expresion -> ENTERO .)
    PRINT           reduce using rule 65 (expresion -> ENTERO .)
    LOCAL           reduce using rule 65 (expresion -> ENTERO .)
    GLOBAL          reduce using rule 65 (expresion -> ENTERO .)
    STRUCT          reduce using rule 65 (expresion -> ENTERO .)
    MUTABLE         reduce using rule 65 (expresion -> ENTERO .)
    ID              reduce using rule 65 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 65 (expresion -> ENTERO .)
    IF              reduce using rule 65 (expresion -> ENTERO .)
    WHILE           reduce using rule 65 (expresion -> ENTERO .)
    FOR             reduce using rule 65 (expresion -> ENTERO .)
    NOT             reduce using rule 65 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 65 (expresion -> ENTERO .)
    ENTERO          reduce using rule 65 (expresion -> ENTERO .)
    CARACTER        reduce using rule 65 (expresion -> ENTERO .)
    CADENA          reduce using rule 65 (expresion -> ENTERO .)
    TRUE            reduce using rule 65 (expresion -> ENTERO .)
    FALSE           reduce using rule 65 (expresion -> ENTERO .)
    NULO            reduce using rule 65 (expresion -> ENTERO .)
    SQRT            reduce using rule 65 (expresion -> ENTERO .)
    TAN             reduce using rule 65 (expresion -> ENTERO .)
    COS             reduce using rule 65 (expresion -> ENTERO .)
    SIN             reduce using rule 65 (expresion -> ENTERO .)
    LOG             reduce using rule 65 (expresion -> ENTERO .)
    LOG10           reduce using rule 65 (expresion -> ENTERO .)
    PARSE           reduce using rule 65 (expresion -> ENTERO .)
    TRUNC           reduce using rule 65 (expresion -> ENTERO .)
    FLOAT           reduce using rule 65 (expresion -> ENTERO .)
    STRING          reduce using rule 65 (expresion -> ENTERO .)
    TYPEOF          reduce using rule 65 (expresion -> ENTERO .)
    PUSH            reduce using rule 65 (expresion -> ENTERO .)
    POP             reduce using rule 65 (expresion -> ENTERO .)
    LENGTH          reduce using rule 65 (expresion -> ENTERO .)
    UPPERCASE       reduce using rule 65 (expresion -> ENTERO .)
    LOWERCASE       reduce using rule 65 (expresion -> ENTERO .)
    CORIZQ          reduce using rule 65 (expresion -> ENTERO .)


state 191

    (45) for_instr_opciones -> expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MENOS resolved as shift
    BREAK           reduce using rule 45 (for_instr_opciones -> expresion .)
    CONTINUE        reduce using rule 45 (for_instr_opciones -> expresion .)
    RETURN          reduce using rule 45 (for_instr_opciones -> expresion .)
    PRINTLN         reduce using rule 45 (for_instr_opciones -> expresion .)
    PRINT           reduce using rule 45 (for_instr_opciones -> expresion .)
    LOCAL           reduce using rule 45 (for_instr_opciones -> expresion .)
    GLOBAL          reduce using rule 45 (for_instr_opciones -> expresion .)
    STRUCT          reduce using rule 45 (for_instr_opciones -> expresion .)
    MUTABLE         reduce using rule 45 (for_instr_opciones -> expresion .)
    ID              reduce using rule 45 (for_instr_opciones -> expresion .)
    FUNCTION        reduce using rule 45 (for_instr_opciones -> expresion .)
    IF              reduce using rule 45 (for_instr_opciones -> expresion .)
    WHILE           reduce using rule 45 (for_instr_opciones -> expresion .)
    FOR             reduce using rule 45 (for_instr_opciones -> expresion .)
    NOT             reduce using rule 45 (for_instr_opciones -> expresion .)
    DECIMAL         reduce using rule 45 (for_instr_opciones -> expresion .)
    ENTERO          reduce using rule 45 (for_instr_opciones -> expresion .)
    CARACTER        reduce using rule 45 (for_instr_opciones -> expresion .)
    CADENA          reduce using rule 45 (for_instr_opciones -> expresion .)
    TRUE            reduce using rule 45 (for_instr_opciones -> expresion .)
    FALSE           reduce using rule 45 (for_instr_opciones -> expresion .)
    NULO            reduce using rule 45 (for_instr_opciones -> expresion .)
    SQRT            reduce using rule 45 (for_instr_opciones -> expresion .)
    TAN             reduce using rule 45 (for_instr_opciones -> expresion .)
    COS             reduce using rule 45 (for_instr_opciones -> expresion .)
    SIN             reduce using rule 45 (for_instr_opciones -> expresion .)
    LOG             reduce using rule 45 (for_instr_opciones -> expresion .)
    LOG10           reduce using rule 45 (for_instr_opciones -> expresion .)
    PARSE           reduce using rule 45 (for_instr_opciones -> expresion .)
    TRUNC           reduce using rule 45 (for_instr_opciones -> expresion .)
    FLOAT           reduce using rule 45 (for_instr_opciones -> expresion .)
    STRING          reduce using rule 45 (for_instr_opciones -> expresion .)
    TYPEOF          reduce using rule 45 (for_instr_opciones -> expresion .)
    PUSH            reduce using rule 45 (for_instr_opciones -> expresion .)
    POP             reduce using rule 45 (for_instr_opciones -> expresion .)
    LENGTH          reduce using rule 45 (for_instr_opciones -> expresion .)
    UPPERCASE       reduce using rule 45 (for_instr_opciones -> expresion .)
    LOWERCASE       reduce using rule 45 (for_instr_opciones -> expresion .)
    CORIZQ          reduce using rule 45 (for_instr_opciones -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77

  ! MENOS           [ reduce using rule 45 (for_instr_opciones -> expresion .) ]


state 192

    (71) expresion -> SQRT PARIZQ expresion PARDER .

    IGUAL           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MAS             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    POR             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    DIV             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    OR              reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    AND             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PRINT           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    ID              reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    IF              reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    FOR             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    NOT             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    CADENA          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    TRUE            reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    FALSE           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    NULO            reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    SQRT            reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    TAN             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    COS             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    SIN             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    LOG             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    LOG10           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PARSE           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    STRING          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PUSH            reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    POP             reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    COMA            reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 71 (expresion -> SQRT PARIZQ expresion PARDER .)


state 193

    (72) expresion -> TAN PARIZQ expresion PARDER .

    IGUAL           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MAS             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    POR             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    DIV             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MODULO          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    OR              reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    AND             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    RETURN          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PRINT           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    ID              reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    IF              reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    FOR             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    NOT             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    CADENA          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    TRUE            reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    FALSE           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    NULO            reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    SQRT            reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    TAN             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    COS             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    SIN             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    LOG             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    LOG10           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PARSE           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    STRING          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PUSH            reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    POP             reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    CORDER          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    COMA            reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 72 (expresion -> TAN PARIZQ expresion PARDER .)


state 194

    (73) expresion -> COS PARIZQ expresion PARDER .

    IGUAL           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MAS             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MENOS           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    POR             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    DIV             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MODULO          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MENOR           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    OR              reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    AND             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    BREAK           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    RETURN          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PRINT           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    ID              reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    IF              reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    WHILE           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    FOR             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    NOT             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    CADENA          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    TRUE            reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    FALSE           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    NULO            reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    SQRT            reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    TAN             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    COS             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    SIN             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    LOG             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    LOG10           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PARSE           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    STRING          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PUSH            reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    POP             reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    CORDER          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    COMA            reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PARDER          reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 73 (expresion -> COS PARIZQ expresion PARDER .)


state 195

    (74) expresion -> SIN PARIZQ expresion PARDER .

    IGUAL           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MAS             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MENOS           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    POR             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    DIV             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MODULO          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MENOR           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    OR              reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    AND             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    BREAK           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    RETURN          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PRINT           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    ID              reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    IF              reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    WHILE           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    FOR             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    NOT             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    CADENA          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    TRUE            reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    FALSE           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    NULO            reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    SQRT            reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    TAN             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    COS             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    SIN             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    LOG             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    LOG10           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PARSE           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    STRING          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PUSH            reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    POP             reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    CORDER          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    COMA            reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PARDER          reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 74 (expresion -> SIN PARIZQ expresion PARDER .)


state 196

    (75) expresion -> LOG PARIZQ expresion COMA . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 231

state 197

    (76) expresion -> LOG10 PARIZQ expresion PARDER .

    IGUAL           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MAS             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MENOS           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    POR             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    DIV             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MODULO          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MENOR           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    OR              reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    AND             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    BREAK           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    RETURN          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PRINT           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    ID              reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    IF              reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    WHILE           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    FOR             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    NOT             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    CADENA          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    TRUE            reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    FALSE           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    NULO            reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    SQRT            reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    TAN             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    COS             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    SIN             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    LOG             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    LOG10           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PARSE           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    STRING          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PUSH            reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    POP             reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    CORDER          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    COMA            reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PARDER          reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 76 (expresion -> LOG10 PARIZQ expresion PARDER .)


state 198

    (77) expresion -> PARSE PARIZQ tipoDato COMA . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 232

state 199

    (78) expresion -> TRUNC PARIZQ tipoDato COMA . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 233

state 200

    (79) expresion -> FLOAT PARIZQ expresion PARDER .

    IGUAL           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MAS             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    POR             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    DIV             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    OR              reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    AND             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PRINT           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    ID              reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    IF              reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    NOT             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    CADENA          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    TRUE            reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    FALSE           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    NULO            reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    SQRT            reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    TAN             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    COS             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    SIN             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    LOG             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    LOG10           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PARSE           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    STRING          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PUSH            reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    POP             reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 79 (expresion -> FLOAT PARIZQ expresion PARDER .)


state 201

    (80) expresion -> STRING PARIZQ expresion PARDER .

    IGUAL           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MAS             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    DIV             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PRINT           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    NOT             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    CADENA          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    TRUE            reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    FALSE           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    NULO            reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    SQRT            reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    TAN             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    COS             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    SIN             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    LOG             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    LOG10           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PARSE           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    STRING          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PUSH            reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    POP             reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    CORDER          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 80 (expresion -> STRING PARIZQ expresion PARDER .)


state 202

    (81) expresion -> TYPEOF PARIZQ expresion PARDER .

    IGUAL           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MAS             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    POR             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DIV             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MODULO          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENOR           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    OR              reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    AND             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    BREAK           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    RETURN          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PRINT           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    ID              reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    IF              reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    WHILE           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FOR             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    NOT             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CADENA          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    TRUE            reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FALSE           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    NULO            reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    SQRT            reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    TAN             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    COS             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    SIN             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LOG             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LOG10           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PARSE           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    STRING          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PUSH            reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    POP             reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 81 (expresion -> TYPEOF PARIZQ expresion PARDER .)


state 203

    (82) expresion -> PUSH NOT PARIZQ expresion . COMA expresion PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    COMA            shift and go to state 234
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 204

    (83) expresion -> POP NOT PARIZQ expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 235
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 205

    (84) expresion -> LENGTH PARIZQ expresion PARDER .

    IGUAL           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MAS             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENOS           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    POR             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DIV             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MODULO          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENOR           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    OR              reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    AND             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    BREAK           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    RETURN          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PRINT           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    ID              reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    IF              reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    WHILE           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FOR             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    NOT             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CADENA          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    TRUE            reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FALSE           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    NULO            reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    SQRT            reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    TAN             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    COS             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    SIN             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LOG             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LOG10           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PARSE           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    STRING          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PUSH            reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    POP             reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CORDER          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    COMA            reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PARDER          reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 84 (expresion -> LENGTH PARIZQ expresion PARDER .)


state 206

    (85) expresion -> UPPERCASE PARIZQ expresion PARDER .

    IGUAL           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MAS             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    DIV             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PRINT           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    NOT             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    CADENA          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    TRUE            reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    FALSE           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    NULO            reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    SQRT            reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    TAN             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    COS             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    SIN             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    LOG             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    LOG10           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PARSE           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    STRING          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PUSH            reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    POP             reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 85 (expresion -> UPPERCASE PARIZQ expresion PARDER .)


state 207

    (86) expresion -> LOWERCASE PARIZQ expresion PARDER .

    IGUAL           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MAS             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    DIV             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PRINT           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    NOT             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    CADENA          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    TRUE            reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    FALSE           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    NULO            reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    SQRT            reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    TAN             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    COS             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    SIN             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    LOG             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    LOG10           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PARSE           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    STRING          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PUSH            reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    POP             reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 86 (expresion -> LOWERCASE PARIZQ expresion PARDER .)


state 208

    (91) expresion -> CORIZQ expresion DOSPUNTOS expresion . CORDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    CORDER          shift and go to state 236
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 209

    (46) expresiones -> expresiones COMA expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    CORDER          reduce using rule 46 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 46 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 46 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 210

    (16) print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .

    BREAK           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    CONTINUE        reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    RETURN          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINTLN         reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINT           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOCAL           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    GLOBAL          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRUCT          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    MUTABLE         reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    ID              reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    FUNCTION        reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    IF              reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    WHILE           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    FOR             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    MENOS           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    NOT             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    DECIMAL         reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    ENTERO          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    CARACTER        reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    CADENA          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUE            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    FALSE           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    NULO            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    SQRT            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    TAN             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    COS             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    SIN             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG10           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    PARSE           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUNC           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    FLOAT           reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRING          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    TYPEOF          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    PUSH            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    POP             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    LENGTH          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    UPPERCASE       reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOWERCASE       reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    CORIZQ          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    $end            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    END             reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSE            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSEIF          reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)
    COMA            reduce using rule 16 (print_instr -> PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA .)


state 211

    (17) print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .

    BREAK           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    CONTINUE        reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    RETURN          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINTLN         reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINT           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOCAL           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    GLOBAL          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRUCT          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    MUTABLE         reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    ID              reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    FUNCTION        reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    IF              reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    WHILE           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    FOR             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    MENOS           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    NOT             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    DECIMAL         reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    ENTERO          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    CARACTER        reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    CADENA          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUE            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    FALSE           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    NULO            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    SQRT            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    TAN             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    COS             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    SIN             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG10           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    PARSE           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUNC           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    FLOAT           reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRING          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    TYPEOF          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    PUSH            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    POP             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    LENGTH          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    UPPERCASE       reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOWERCASE       reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    CORIZQ          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    $end            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    END             reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSE            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSEIF          reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)
    COMA            reduce using rule 17 (print_instr -> PRINT PARIZQ expresiones PARDER PUNTOYCOMA .)


state 212

    (18) declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .

    BREAK           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    CONTINUE        reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    RETURN          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    PRINTLN         reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    PRINT           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    LOCAL           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    GLOBAL          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    STRUCT          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    MUTABLE         reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    FUNCTION        reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    WHILE           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    FOR             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    MENOS           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    NOT             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    DECIMAL         reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    ENTERO          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    CARACTER        reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    CADENA          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    TRUE            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    FALSE           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    NULO            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    SQRT            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    TAN             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    COS             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    SIN             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    LOG             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    LOG10           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    PARSE           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    TRUNC           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    FLOAT           reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    STRING          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    TYPEOF          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    PUSH            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    POP             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    LENGTH          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    UPPERCASE       reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    LOWERCASE       reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    CORIZQ          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    $end            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    END             reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)
    COMA            reduce using rule 18 (declaracion_instr -> LOCAL ID IGUAL expresion PUNTOYCOMA .)


state 213

    (88) expresion -> ID PARIZQ expresiones PARDER .

    MAS             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    POR             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DIV             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    POTENCIA        reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MODULO          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MAYOR           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENOR           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MAYORIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MENORIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    IGUALIGUAL      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DIFERENTE       reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    OR              reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    AND             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PUNTO           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    IGUAL           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    BREAK           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    CONTINUE        reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    RETURN          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PRINTLN         reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PRINT           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    LOCAL           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    GLOBAL          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    STRUCT          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    MUTABLE         reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    ID              reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    FUNCTION        reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    IF              reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    WHILE           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    FOR             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    NOT             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DECIMAL         reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    ENTERO          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    CARACTER        reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    CADENA          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    TRUE            reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    FALSE           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    NULO            reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    SQRT            reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    TAN             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    COS             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    SIN             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    LOG             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    LOG10           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PARSE           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    TRUNC           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    FLOAT           reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    STRING          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    TYPEOF          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PUSH            reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    POP             reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    LENGTH          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    UPPERCASE       reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    LOWERCASE       reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    CORIZQ          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DOSPUNTOS       reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    CORDER          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    COMA            reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)
    PUNTOYCOMA      reduce using rule 88 (expresion -> ID PARIZQ expresiones PARDER .)


state 214

    (29) declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 237


state 215

    (30) llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .

    BREAK           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    CONTINUE        reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    RETURN          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINTLN         reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    PRINT           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOCAL           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    GLOBAL          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRUCT          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    MUTABLE         reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    ID              reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    FUNCTION        reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    IF              reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    WHILE           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    FOR             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    MENOS           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    NOT             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    DECIMAL         reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    ENTERO          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    CARACTER        reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    CADENA          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUE            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    FALSE           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    NULO            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    SQRT            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    TAN             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    COS             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    SIN             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOG10           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    PARSE           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    TRUNC           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    FLOAT           reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    STRING          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    TYPEOF          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    PUSH            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    POP             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    LENGTH          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    UPPERCASE       reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    LOWERCASE       reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    CORIZQ          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    $end            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    END             reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSE            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    ELSEIF          reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)
    COMA            reduce using rule 30 (llamadaFuncion_instr -> ID PARIZQ expresiones PARDER PUNTOYCOMA .)


state 216

    (19) declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .

    BREAK           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    CONTINUE        reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    RETURN          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    PRINTLN         reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    PRINT           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    LOCAL           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    GLOBAL          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    STRUCT          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    MUTABLE         reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    FUNCTION        reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    WHILE           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    FOR             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    MENOS           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    NOT             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    DECIMAL         reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    ENTERO          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    CARACTER        reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    CADENA          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    TRUE            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    FALSE           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    NULO            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    SQRT            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    TAN             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    COS             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    SIN             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    LOG             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    LOG10           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    PARSE           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    TRUNC           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    FLOAT           reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    STRING          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    TYPEOF          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    PUSH            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    POP             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    LENGTH          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    UPPERCASE       reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    LOWERCASE       reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    CORIZQ          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    $end            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    END             reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)
    COMA            reduce using rule 19 (declaracion_instr -> GLOBAL ID IGUAL expresion PUNTOYCOMA .)


state 217

    (26) struct_variable -> ID DOSPUNTOSDOSPUNTOS tipoDato . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 238


state 218

    (22) declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .

    BREAK           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    CONTINUE        reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    RETURN          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    PRINTLN         reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    PRINT           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    LOCAL           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    GLOBAL          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    STRUCT          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    MUTABLE         reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    ID              reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    FUNCTION        reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    IF              reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    WHILE           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    FOR             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    MENOS           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    NOT             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    DECIMAL         reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    ENTERO          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    CARACTER        reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    CADENA          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    TRUE            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    FALSE           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    NULO            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    SQRT            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    TAN             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    COS             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    SIN             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    LOG             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    LOG10           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    PARSE           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    TRUNC           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    FLOAT           reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    STRING          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    TYPEOF          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    PUSH            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    POP             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    LENGTH          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    CORIZQ          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    $end            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    END             reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    ELSE            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    ELSEIF          reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)
    COMA            reduce using rule 22 (declaracion_instr -> STRUCT ID struct_variables END PUNTOYCOMA .)


state 219

    (23) declaracion_instr -> MUTABLE STRUCT ID struct_variables END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 239


state 220

    (34) parametro -> ID DOSPUNTOSDOSPUNTOS . tipoDato
    (93) tipoDato -> . NULO
    (94) tipoDato -> . FLOAT64
    (95) tipoDato -> . INT64
    (96) tipoDato -> . BOOL
    (97) tipoDato -> . CHAR
    (98) tipoDato -> . STRING
    (99) tipoDato -> . ID

    NULO            shift and go to state 147
    FLOAT64         shift and go to state 148
    INT64           shift and go to state 149
    BOOL            shift and go to state 150
    CHAR            shift and go to state 151
    STRING          shift and go to state 152
    ID              shift and go to state 153

    tipoDato                       shift and go to state 240

state 221

    (31) funcion_instr -> FUNCTION ID PARIZQ parametros PARDER . instrucciones END PUNTOYCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    instrucciones                  shift and go to state 241
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 222

    (32) parametros -> parametros COMA . parametro
    (34) parametro -> . ID DOSPUNTOSDOSPUNTOS tipoDato
    (35) parametro -> . ID

    ID              shift and go to state 179

    parametro                      shift and go to state 242

state 223

    (36) if_instr -> IF expresion instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    END             reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 36 (if_instr -> IF expresion instrucciones END PUNTOYCOMA .)


state 224

    (37) if_instr -> IF expresion instrucciones elseifs ELSE . instrucciones END PUNTOYCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 225

    (39) elseifs -> elseifs COMA . elseif_instr
    (41) elseif_instr -> . ELSEIF expresion instrucciones

    ELSEIF          shift and go to state 186

    elseif_instr                   shift and go to state 244

state 226

    (38) if_instr -> IF expresion instrucciones ELSE instrucciones . END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 245
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 227

    (41) elseif_instr -> ELSEIF expresion . instrucciones
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MAS             shift and go to state 63
    MENOS           shift and go to state 137
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instrucciones                  shift and go to state 246
    instruccion                    shift and go to state 3
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 228

    (42) while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    END             reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 42 (while_instr -> WHILE expresion instrucciones END PUNTOYCOMA .)


state 229

    (43) for_instr -> FOR ID IN for_instr_opciones instrucciones . END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 247
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 230

    (44) for_instr_opciones -> ENTERO DOSPUNTOS . ENTERO

    ENTERO          shift and go to state 248


state 231

    (75) expresion -> LOG PARIZQ expresion COMA expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 249
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 232

    (77) expresion -> PARSE PARIZQ tipoDato COMA expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 250
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 233

    (78) expresion -> TRUNC PARIZQ tipoDato COMA expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 251
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 234

    (82) expresion -> PUSH NOT PARIZQ expresion COMA . expresion PARDER
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    ID              shift and go to state 58
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 252

state 235

    (83) expresion -> POP NOT PARIZQ expresion PARDER .

    IGUAL           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MAS             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    POR             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    DIV             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    OR              reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    AND             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PRINT           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    LOCAL           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    GLOBAL          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    ID              reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    IF              reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    FOR             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    NOT             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    CARACTER        reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    CADENA          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    TRUE            reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    FALSE           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    NULO            reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    SQRT            reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    TAN             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    COS             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    SIN             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    LOG             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    LOG10           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PARSE           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    FLOAT           reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    STRING          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    TYPEOF          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PUSH            reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    POP             reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    LENGTH          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    UPPERCASE       reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    LOWERCASE       reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    COMA            reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)
    PUNTOYCOMA      reduce using rule 83 (expresion -> POP NOT PARIZQ expresion PARDER .)


state 236

    (91) expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .

    IGUAL           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAS             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOS           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    POR             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DIV             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    POTENCIA        reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MODULO          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYOR           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENOR           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MAYORIGUAL      reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MENORIGUAL      reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IGUALIGUAL      reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DIFERENTE       reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    OR              reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    AND             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUNTO           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    BREAK           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CONTINUE        reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    RETURN          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINTLN         reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PRINT           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOCAL           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    GLOBAL          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    STRUCT          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    MUTABLE         reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    ID              reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FUNCTION        reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    IF              reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    WHILE           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FOR             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    NOT             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DECIMAL         reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    ENTERO          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CARACTER        reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CADENA          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    TRUE            reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FALSE           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    NULO            reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    SQRT            reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    TAN             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    COS             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    SIN             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOG             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOG10           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PARSE           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    TRUNC           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    FLOAT           reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    STRING          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    TYPEOF          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUSH            reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    POP             reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LENGTH          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    UPPERCASE       reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    LOWERCASE       reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CORIZQ          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DOSPUNTOS       reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    CORDER          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    COMA            reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PARDER          reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)
    PUNTOYCOMA      reduce using rule 91 (expresion -> CORIZQ expresion DOSPUNTOS expresion CORDER .)


state 237

    (29) declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .

    BREAK           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    CONTINUE        reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    RETURN          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    PRINTLN         reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    PRINT           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    LOCAL           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    GLOBAL          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    STRUCT          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    MUTABLE         reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    ID              reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    FUNCTION        reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    IF              reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    WHILE           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    FOR             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    MENOS           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    NOT             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    DECIMAL         reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    ENTERO          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    CARACTER        reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    CADENA          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    TRUE            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    FALSE           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    NULO            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    SQRT            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    TAN             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    COS             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    SIN             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    LOG             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    LOG10           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    PARSE           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    TRUNC           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    FLOAT           reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    STRING          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    TYPEOF          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    PUSH            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    POP             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    LENGTH          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    UPPERCASE       reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    LOWERCASE       reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    CORIZQ          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    $end            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    END             reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    ELSE            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    ELSEIF          reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    COMA            reduce using rule 29 (declaracion_asignacion_instr -> ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)


state 238

    (26) struct_variable -> ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .

    END             reduce using rule 26 (struct_variable -> ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)
    ID              reduce using rule 26 (struct_variable -> ID DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA .)


state 239

    (23) declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .

    BREAK           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    CONTINUE        reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    RETURN          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    PRINTLN         reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    PRINT           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    LOCAL           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    GLOBAL          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    STRUCT          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    MUTABLE         reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    ID              reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    FUNCTION        reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    IF              reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    WHILE           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    FOR             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    MENOS           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    NOT             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    DECIMAL         reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    ENTERO          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    CARACTER        reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    CADENA          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    TRUE            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    FALSE           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    NULO            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    SQRT            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    TAN             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    COS             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    SIN             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    LOG             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    LOG10           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    PARSE           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    TRUNC           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    FLOAT           reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    STRING          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    TYPEOF          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    PUSH            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    POP             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    LENGTH          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    CORIZQ          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    $end            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    END             reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    ELSE            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    ELSEIF          reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)
    COMA            reduce using rule 23 (declaracion_instr -> MUTABLE STRUCT ID struct_variables END PUNTOYCOMA .)


state 240

    (34) parametro -> ID DOSPUNTOSDOSPUNTOS tipoDato .

    PARDER          reduce using rule 34 (parametro -> ID DOSPUNTOSDOSPUNTOS tipoDato .)
    COMA            reduce using rule 34 (parametro -> ID DOSPUNTOSDOSPUNTOS tipoDato .)


state 241

    (31) funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones . END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 253
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12
    expresion                      shift and go to state 20

state 242

    (32) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 32 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 32 (parametros -> parametros COMA parametro .)


state 243

    (37) if_instr -> IF expresion instrucciones elseifs ELSE instrucciones . END PUNTOYCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    END             shift and go to state 254
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 244

    (39) elseifs -> elseifs COMA elseif_instr .

    ELSE            reduce using rule 39 (elseifs -> elseifs COMA elseif_instr .)
    COMA            reduce using rule 39 (elseifs -> elseifs COMA elseif_instr .)


state 245

    (38) if_instr -> IF expresion instrucciones ELSE instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 255


state 246

    (41) elseif_instr -> ELSEIF expresion instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print_instr
    (5) instruccion -> . declaracion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . declaracion_asignacion_instr
    (8) instruccion -> . llamadaFuncion_instr
    (9) instruccion -> . funcion_instr
    (10) instruccion -> . if_instr
    (11) instruccion -> . while_instr
    (12) instruccion -> . for_instr
    (13) instruccion -> . BREAK
    (14) instruccion -> . CONTINUE
    (15) instruccion -> . RETURN
    (16) print_instr -> . PRINTLN PARIZQ expresiones PARDER PUNTOYCOMA
    (17) print_instr -> . PRINT PARIZQ expresiones PARDER PUNTOYCOMA
    (18) declaracion_instr -> . LOCAL ID IGUAL expresion PUNTOYCOMA
    (19) declaracion_instr -> . GLOBAL ID IGUAL expresion PUNTOYCOMA
    (20) declaracion_instr -> . LOCAL ID PUNTOYCOMA
    (21) declaracion_instr -> . GLOBAL ID PUNTOYCOMA
    (22) declaracion_instr -> . STRUCT ID struct_variables END PUNTOYCOMA
    (23) declaracion_instr -> . MUTABLE STRUCT ID struct_variables END PUNTOYCOMA
    (28) asignacion_instr -> . expresion IGUAL expresion PUNTOYCOMA
    (29) declaracion_asignacion_instr -> . ID IGUAL expresion DOSPUNTOSDOSPUNTOS tipoDato PUNTOYCOMA
    (30) llamadaFuncion_instr -> . ID PARIZQ expresiones PARDER PUNTOYCOMA
    (31) funcion_instr -> . FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA
    (36) if_instr -> . IF expresion instrucciones END PUNTOYCOMA
    (37) if_instr -> . IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA
    (38) if_instr -> . IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA
    (42) while_instr -> . WHILE expresion instrucciones END PUNTOYCOMA
    (43) for_instr -> . FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion POR expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion POTENCIA expresion
    (53) expresion -> . expresion MODULO expresion
    (54) expresion -> . expresion MAYOR expresion
    (55) expresion -> . expresion MENOR expresion
    (56) expresion -> . expresion MAYORIGUAL expresion
    (57) expresion -> . expresion MENORIGUAL expresion
    (58) expresion -> . expresion IGUALIGUAL expresion
    (59) expresion -> . expresion DIFERENTE expresion
    (60) expresion -> . expresion OR expresion
    (61) expresion -> . expresion AND expresion
    (62) expresion -> . MENOS expresion
    (63) expresion -> . NOT expresion
    (64) expresion -> . DECIMAL
    (65) expresion -> . ENTERO
    (66) expresion -> . CARACTER
    (67) expresion -> . CADENA
    (68) expresion -> . TRUE
    (69) expresion -> . FALSE
    (70) expresion -> . NULO
    (71) expresion -> . SQRT PARIZQ expresion PARDER
    (72) expresion -> . TAN PARIZQ expresion PARDER
    (73) expresion -> . COS PARIZQ expresion PARDER
    (74) expresion -> . SIN PARIZQ expresion PARDER
    (75) expresion -> . LOG PARIZQ expresion COMA expresion PARDER
    (76) expresion -> . LOG10 PARIZQ expresion PARDER
    (77) expresion -> . PARSE PARIZQ tipoDato COMA expresion PARDER
    (78) expresion -> . TRUNC PARIZQ tipoDato COMA expresion PARDER
    (79) expresion -> . FLOAT PARIZQ expresion PARDER
    (80) expresion -> . STRING PARIZQ expresion PARDER
    (81) expresion -> . TYPEOF PARIZQ expresion PARDER
    (82) expresion -> . PUSH NOT PARIZQ expresion COMA expresion PARDER
    (83) expresion -> . POP NOT PARIZQ expresion PARDER
    (84) expresion -> . LENGTH PARIZQ expresion PARDER
    (85) expresion -> . UPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . LOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion PUNTO expresion
    (88) expresion -> . ID PARIZQ expresiones PARDER
    (89) expresion -> . ID expresion
    (90) expresion -> . ID
    (91) expresion -> . CORIZQ expresion DOSPUNTOS expresion CORDER
    (92) expresion -> . CORIZQ expresiones CORDER

    ELSE            reduce using rule 41 (elseif_instr -> ELSEIF expresion instrucciones .)
    COMA            reduce using rule 41 (elseif_instr -> ELSEIF expresion instrucciones .)
    BREAK           shift and go to state 13
    CONTINUE        shift and go to state 14
    RETURN          shift and go to state 15
    PRINTLN         shift and go to state 16
    PRINT           shift and go to state 17
    LOCAL           shift and go to state 18
    GLOBAL          shift and go to state 21
    STRUCT          shift and go to state 22
    MUTABLE         shift and go to state 23
    ID              shift and go to state 19
    FUNCTION        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    MENOS           shift and go to state 28
    NOT             shift and go to state 29
    DECIMAL         shift and go to state 30
    ENTERO          shift and go to state 31
    CARACTER        shift and go to state 32
    CADENA          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULO            shift and go to state 36
    SQRT            shift and go to state 37
    TAN             shift and go to state 38
    COS             shift and go to state 39
    SIN             shift and go to state 40
    LOG             shift and go to state 41
    LOG10           shift and go to state 42
    PARSE           shift and go to state 43
    TRUNC           shift and go to state 44
    FLOAT           shift and go to state 45
    STRING          shift and go to state 46
    TYPEOF          shift and go to state 47
    PUSH            shift and go to state 48
    POP             shift and go to state 49
    LENGTH          shift and go to state 50
    UPPERCASE       shift and go to state 51
    LOWERCASE       shift and go to state 52
    CORIZQ          shift and go to state 53

    expresion                      shift and go to state 20
    instruccion                    shift and go to state 54
    print_instr                    shift and go to state 4
    declaracion_instr              shift and go to state 5
    asignacion_instr               shift and go to state 6
    declaracion_asignacion_instr   shift and go to state 7
    llamadaFuncion_instr           shift and go to state 8
    funcion_instr                  shift and go to state 9
    if_instr                       shift and go to state 10
    while_instr                    shift and go to state 11
    for_instr                      shift and go to state 12

state 247

    (43) for_instr -> FOR ID IN for_instr_opciones instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 256


state 248

    (44) for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .

    BREAK           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    CONTINUE        reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    RETURN          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    PRINTLN         reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    PRINT           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    LOCAL           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    GLOBAL          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    STRUCT          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    MUTABLE         reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    ID              reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    FUNCTION        reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    IF              reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    WHILE           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    FOR             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    MENOS           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    NOT             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    DECIMAL         reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    ENTERO          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    CARACTER        reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    CADENA          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    TRUE            reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    FALSE           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    NULO            reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    SQRT            reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    TAN             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    COS             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    SIN             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    LOG             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    LOG10           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    PARSE           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    TRUNC           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    FLOAT           reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    STRING          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    TYPEOF          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    PUSH            reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    POP             reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    LENGTH          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    UPPERCASE       reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    LOWERCASE       reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)
    CORIZQ          reduce using rule 44 (for_instr_opciones -> ENTERO DOSPUNTOS ENTERO .)


state 249

    (75) expresion -> LOG PARIZQ expresion COMA expresion PARDER .

    IGUAL           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    DIV             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    DIFERENTE       reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PUNTO           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PRINTLN         reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PRINT           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    LOCAL           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    GLOBAL          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    STRUCT          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    MUTABLE         reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    NOT             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    DECIMAL         reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    ENTERO          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    CARACTER        reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    CADENA          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    TRUE            reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    FALSE           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    NULO            reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    SQRT            reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    TAN             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    COS             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    SIN             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    LOG             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    LOG10           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PARSE           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    TRUNC           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    FLOAT           reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    STRING          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    TYPEOF          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PUSH            reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    POP             reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    LENGTH          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    UPPERCASE       reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    LOWERCASE       reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    CORIZQ          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)
    PUNTOYCOMA      reduce using rule 75 (expresion -> LOG PARIZQ expresion COMA expresion PARDER .)


state 250

    (77) expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .

    IGUAL           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MAS             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MENOS           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    POR             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    DIV             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    POTENCIA        reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MODULO          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MAYOR           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MENOR           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    DIFERENTE       reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    OR              reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    AND             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PUNTO           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    BREAK           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    CONTINUE        reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    RETURN          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PRINTLN         reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PRINT           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    LOCAL           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    GLOBAL          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    STRUCT          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    MUTABLE         reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    ID              reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    FUNCTION        reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    IF              reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    WHILE           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    FOR             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    NOT             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    DECIMAL         reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    ENTERO          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    CARACTER        reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    CADENA          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    TRUE            reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    FALSE           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    NULO            reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    SQRT            reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    TAN             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    COS             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    SIN             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    LOG             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    LOG10           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PARSE           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    TRUNC           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    FLOAT           reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    STRING          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    TYPEOF          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PUSH            reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    POP             reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    LENGTH          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    UPPERCASE       reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    LOWERCASE       reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    CORIZQ          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    CORDER          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    COMA            reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PARDER          reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)
    PUNTOYCOMA      reduce using rule 77 (expresion -> PARSE PARIZQ tipoDato COMA expresion PARDER .)


state 251

    (78) expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .

    IGUAL           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MAS             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MENOS           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    POR             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    DIV             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    POTENCIA        reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MODULO          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MAYOR           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MENOR           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    DIFERENTE       reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    OR              reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    AND             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PUNTO           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    BREAK           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    CONTINUE        reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    RETURN          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PRINTLN         reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PRINT           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    LOCAL           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    GLOBAL          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    STRUCT          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    MUTABLE         reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    ID              reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    FUNCTION        reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    IF              reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    WHILE           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    FOR             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    NOT             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    DECIMAL         reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    ENTERO          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    CARACTER        reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    CADENA          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    TRUE            reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    FALSE           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    NULO            reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    SQRT            reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    TAN             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    COS             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    SIN             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    LOG             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    LOG10           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PARSE           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    TRUNC           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    FLOAT           reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    STRING          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    TYPEOF          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PUSH            reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    POP             reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    LENGTH          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    UPPERCASE       reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    LOWERCASE       reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    CORIZQ          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    CORDER          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    COMA            reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PARDER          reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)
    PUNTOYCOMA      reduce using rule 78 (expresion -> TRUNC PARIZQ tipoDato COMA expresion PARDER .)


state 252

    (82) expresion -> PUSH NOT PARIZQ expresion COMA expresion . PARDER
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . POR expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . POTENCIA expresion
    (53) expresion -> expresion . MODULO expresion
    (54) expresion -> expresion . MAYOR expresion
    (55) expresion -> expresion . MENOR expresion
    (56) expresion -> expresion . MAYORIGUAL expresion
    (57) expresion -> expresion . MENORIGUAL expresion
    (58) expresion -> expresion . IGUALIGUAL expresion
    (59) expresion -> expresion . DIFERENTE expresion
    (60) expresion -> expresion . OR expresion
    (61) expresion -> expresion . AND expresion
    (87) expresion -> expresion . PUNTO expresion

    PARDER          shift and go to state 257
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIV             shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    PUNTO           shift and go to state 77


state 253

    (31) funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 258


state 254

    (37) if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 259


state 255

    (38) if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    END             reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 38 (if_instr -> IF expresion instrucciones ELSE instrucciones END PUNTOYCOMA .)


state 256

    (43) for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    END             reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 43 (for_instr -> FOR ID IN for_instr_opciones instrucciones END PUNTOYCOMA .)


state 257

    (82) expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .

    IGUAL           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MAS             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DIV             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DIFERENTE       reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PUNTO           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PRINTLN         reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PRINT           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    LOCAL           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    GLOBAL          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    STRUCT          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MUTABLE         reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    NOT             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DECIMAL         reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    ENTERO          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CARACTER        reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CADENA          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    TRUE            reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    FALSE           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    NULO            reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    SQRT            reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    TAN             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    COS             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    SIN             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    LOG             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    LOG10           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PARSE           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    TRUNC           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    FLOAT           reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    STRING          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    TYPEOF          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PUSH            reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    POP             reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    LENGTH          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    UPPERCASE       reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    LOWERCASE       reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CORIZQ          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DOSPUNTOSDOSPUNTOS reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PUNTOYCOMA      reduce using rule 82 (expresion -> PUSH NOT PARIZQ expresion COMA expresion PARDER .)


state 258

    (31) funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    END             reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 31 (funcion_instr -> FUNCTION ID PARIZQ parametros PARDER instrucciones END PUNTOYCOMA .)


state 259

    (37) if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .

    BREAK           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    CONTINUE        reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    RETURN          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    PRINTLN         reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    PRINT           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    LOCAL           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    GLOBAL          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    STRUCT          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    MUTABLE         reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    ID              reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    FUNCTION        reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    IF              reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    WHILE           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    FOR             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    MENOS           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    NOT             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    DECIMAL         reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    ENTERO          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    CARACTER        reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    CADENA          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    TRUE            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    FALSE           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    NULO            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    SQRT            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    TAN             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    COS             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    SIN             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    LOG             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    LOG10           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    PARSE           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    TRUNC           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    FLOAT           reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    STRING          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    TYPEOF          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    PUSH            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    POP             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    LENGTH          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    UPPERCASE       reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    LOWERCASE       reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    CORIZQ          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    $end            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    END             reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    ELSE            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    ELSEIF          reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)
    COMA            reduce using rule 37 (if_instr -> IF expresion instrucciones elseifs ELSE instrucciones END PUNTOYCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 58 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 58 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 58 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 58 resolved as shift
WARNING: shift/reduce conflict for NULO in state 58 resolved as shift
WARNING: shift/reduce conflict for SQRT in state 58 resolved as shift
WARNING: shift/reduce conflict for TAN in state 58 resolved as shift
WARNING: shift/reduce conflict for COS in state 58 resolved as shift
WARNING: shift/reduce conflict for SIN in state 58 resolved as shift
WARNING: shift/reduce conflict for LOG in state 58 resolved as shift
WARNING: shift/reduce conflict for LOG10 in state 58 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 58 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 58 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 58 resolved as shift
WARNING: shift/reduce conflict for POP in state 58 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 58 resolved as shift
WARNING: shift/reduce conflict for UPPERCASE in state 58 resolved as shift
WARNING: shift/reduce conflict for LOWERCASE in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for MAS in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 60 resolved as shift
WARNING: shift/reduce conflict for POR in state 60 resolved as shift
WARNING: shift/reduce conflict for DIV in state 60 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 60 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 60 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 60 resolved as shift
WARNING: shift/reduce conflict for MAS in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 128 resolved as shift
WARNING: shift/reduce conflict for POR in state 128 resolved as shift
WARNING: shift/reduce conflict for DIV in state 128 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 128 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 191 resolved as shift
WARNING: reduce/reduce conflict in state 187 resolved using rule (expresion -> expresion MENOS expresion)
WARNING: rejected rule (expresion -> MENOS expresion) in state 187
