Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CADENA
    CARACTER
    CHAR
    COMA
    CONTINUE
    CORDER
    CORIZQ
    COS
    DECIMAL
    DIFERENTE
    DIV
    DOLAR
    DOSPUNTOS
    DOSPUNTOSDOSPUNTOS
    ELSE
    ELSEIF
    END
    ENTERO
    FALSE
    FLOAT
    FLOAT64
    FOR
    FUNCTION
    GLOBAL
    ID
    IF
    IGUAL
    IGUALIGUAL
    IN
    INT64
    LOCAL
    LOG
    LOG10
    LOWERCASE
    MAS
    MAYOR
    MAYORIGUAL
    MENOR
    MENORIGUAL
    MENOS
    MODULO
    MUTABLE
    NOT
    NULO
    OR
    PARDER
    PARIZQ
    PARSE
    POR
    POTENCIA
    PRINT
    PRINTLN
    PUNTO
    PUNTOYCOMA
    RETURN
    SIN
    SQRT
    STRUCT
    TAN
    TRUE
    TRUNC
    TYPEOF
    UPPERCASE
    WHILE

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> STRING

Terminals, with rules where they appear

AND                  : 
BREAK                : 
CADENA               : 
CARACTER             : 
CHAR                 : 
COMA                 : 
CONTINUE             : 
CORDER               : 
CORIZQ               : 
COS                  : 
DECIMAL              : 
DIFERENTE            : 
DIV                  : 
DOLAR                : 
DOSPUNTOS            : 
DOSPUNTOSDOSPUNTOS   : 
ELSE                 : 
ELSEIF               : 
END                  : 
ENTERO               : 
FALSE                : 
FLOAT                : 
FLOAT64              : 
FOR                  : 
FUNCTION             : 
GLOBAL               : 
ID                   : 
IF                   : 
IGUAL                : 
IGUALIGUAL           : 
IN                   : 
INT64                : 
LOCAL                : 
LOG                  : 
LOG10                : 
LOWERCASE            : 
MAS                  : 
MAYOR                : 
MAYORIGUAL           : 
MENOR                : 
MENORIGUAL           : 
MENOS                : 
MODULO               : 
MUTABLE              : 
NOT                  : 
NULO                 : 
OR                   : 
PARDER               : 
PARIZQ               : 
PARSE                : 
POR                  : 
POTENCIA             : 
PRINT                : 
PRINTLN              : 
PUNTO                : 
PUNTOYCOMA           : 
RETURN               : 
SIN                  : 
SQRT                 : 
STRING               : 1
STRUCT               : 
TAN                  : 
TRUE                 : 
TRUNC                : 
TYPEOF               : 
UPPERCASE            : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

INICIO               : 0

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . STRING

    STRING          shift and go to state 2

    INICIO                         shift and go to state 1

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> STRING .

    $end            reduce using rule 1 (INICIO -> STRING .)

